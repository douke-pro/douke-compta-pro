<!DOCTYPE html>
<html lang="fr" class="h-full">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>DOUKÈ Compta Pro - Gestion Comptable SYSCOHADA Révisé</title>
<script src="https://cdn.tailwindcss.com"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/marked/4.3.0/marked.min.js"></script>

<script>
tailwind.config = {
theme: {
extend: {
colors: {
primary: '#5D5CDE',
'primary-light': '#3B82F6',
'primary-dark': '#1E40AF',
secondary: '#1D4ED8',
success: '#059669',
warning: '#D97706',
danger: '#DC2626',
info: '#0284C7'
}
}
}
}
</script>
</head>
<body class="bg-gray-100 dark:bg-gray-900 transition-colors duration-300">

<!-- Dark mode detection with theme switcher -->
<script>
// Theme management - FONCTION ORIGINALE COMPLÈTE
const themeManager = {
current: 'system',

init() {
// Detect initial theme
if (localStorage.getItem('theme') === 'dark' ||
(!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
document.documentElement.classList.add('dark');
this.current = 'dark';
} else if (localStorage.getItem('theme') === 'light') {
document.documentElement.classList.remove('dark');
this.current = 'light';
} else {
this.current = 'system';
}

// Listen for system theme changes
window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
if (this.current === 'system') {
if (event.matches) {
document.documentElement.classList.add('dark');
} else {
document.documentElement.classList.remove('dark');
}
}
});
},

setTheme(theme) {
this.current = theme;
if (theme === 'dark') {
document.documentElement.classList.add('dark');
localStorage.setItem('theme', 'dark');
} else if (theme === 'light') {
document.documentElement.classList.remove('dark');
localStorage.setItem('theme', 'light');
} else {
localStorage.removeItem('theme');
if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
document.documentElement.classList.add('dark');
} else {
document.documentElement.classList.remove('dark');
}
}
}
};

themeManager.init();
</script>

<!-- Application State - ÉTAT ORIGINAL COMPLET -->
<script>
const app = {
currentProfile: null,
currentCompany: null,
currentUser: null,
isAuthenticated: false,
accounts: [],
entries: [],
companies: [],
users: [],
cashRegisters: [],
companyLogo: null,
notifications: [],
deadlines: []
};
</script>

<!-- Interface de Connexion - INTERFACE ORIGINALE COMPLÈTE -->
<div id="loginInterface" class="min-h-screen flex items-center justify-center bg-gradient-to-br from-primary to-primary-light">
<div class="max-w-md w-full mx-4">
<div class="bg-white dark:bg-gray-800 rounded-2xl shadow-2xl p-8">
<!-- Logo et titre -->
<div class="text-center mb-8">
<div class="w-20 h-20 bg-primary text-white rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg company-logo">
<i class="fas fa-calculator text-3xl"></i>
</div>
<h1 class="text-3xl font-bold text-gray-900 dark:text-white">DOUKÈ Compta Pro</h1>
<p class="text-gray-600 dark:text-gray-400 mt-2">Gestion Comptable SYSCOHADA Révisé</p>
</div>

<!-- Formulaire de connexion -->
<form id="loginForm" class="space-y-6">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
<i class="fas fa-envelope mr-2"></i>Email
</label>
<input type="email" id="loginEmail" required
class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent transition-colors"
placeholder="votre@email.com">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
<i class="fas fa-lock mr-2"></i>Mot de passe
</label>
<input type="password" id="loginPassword" required
class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent transition-colors"
placeholder="Votre mot de passe">
</div>

<div class="flex items-center justify-between">
<label class="flex items-center">
<input type="checkbox" class="w-4 h-4 text-primary bg-gray-100 border-gray-300 rounded focus:ring-primary">
<span class="ml-2 text-sm text-gray-600 dark:text-gray-400">Se souvenir de moi</span>
</label>
<a href="#" onclick="showForgotPassword()" class="text-sm text-primary hover:text-primary/80 transition-colors">Mot de passe oublié ?</a>
</div>

<button type="submit" class="w-full bg-primary hover:bg-primary/90 text-white py-3 rounded-lg font-medium transition-colors transform hover:scale-105">
<i class="fas fa-sign-in-alt mr-2"></i>Se connecter
</button>
</form>

<!-- Comptes de démonstration -->
<div class="mt-8 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
<h3 class="text-sm font-medium text-gray-900 dark:text-white mb-3">Comptes de démonstration :</h3>
<div class="space-y-2 text-xs">
<button onclick="loginAs('admin')" class="w-full text-left p-2 hover:bg-white dark:hover:bg-gray-600 rounded transition-colors">
<strong>Administrateur :</strong> admin@doukecompta.ci / admin123
</button>
<button onclick="loginAs('collaborateur-senior')" class="w-full text-left p-2 hover:bg-white dark:hover:bg-gray-600 rounded transition-colors">
<strong>Collaborateur Senior :</strong> marie.kouassi@cabinet.com / collab123
</button>
<button onclick="loginAs('collaborateur')" class="w-full text-left p-2 hover:bg-white dark:hover:bg-gray-600 rounded transition-colors">
<strong>Collaborateur :</strong> jean.diabate@cabinet.com / collab123
</button>
<button onclick="loginAs('user')" class="w-full text-left p-2 hover:bg-white dark:hover:bg-gray-600 rounded transition-colors">
<strong>Utilisateur :</strong> atraore@sarltech.ci / user123
</button>
<button onclick="loginAs('caissier')" class="w-full text-left p-2 hover:bg-white dark:hover:bg-gray-600 rounded transition-colors">
<strong>Caissier :</strong> ikone@caisse.ci / caisse123
</button>
</div>
</div>

<div class="mt-6 text-center">
<p class="text-sm text-gray-600 dark:text-gray-400">
Pas encore de compte ?
<button onclick="showRegisterForm()" class="text-primary hover:text-primary/80 font-medium transition-colors">S'inscrire</button>
</p>
</div>
</div>
</div>
</div>

<!-- Interface principale de l'application - INTERFACE ORIGINALE COMPLÈTE -->
<div id="mainApp" class="hidden h-screen overflow-hidden">
<div class="flex h-screen overflow-hidden">
<!-- Sidebar -->
<div id="sidebar" class="w-64 bg-white dark:bg-gray-800 shadow-lg transform transition-transform duration-300 ease-in-out lg:translate-x-0 -translate-x-full fixed lg:static z-30 h-full">
<div class="flex flex-col h-full">
<!-- Header -->
<div class="flex items-center justify-center h-16 border-b border-gray-200 dark:border-gray-700 bg-primary">
<div class="flex items-center space-x-3">
<div class="w-8 h-8 bg-white text-primary rounded-lg flex items-center justify-center font-bold company-logo" id="appLogo">
<i class="fas fa-calculator"></i>
</div>
<span class="text-white font-bold text-lg">DOUKÈ Compta Pro</span>
</div>
</div>

<!-- Profil utilisateur connecté -->
<div class="p-4 bg-primary/10">
<div class="flex items-center space-x-3">
<div class="w-10 h-10 bg-primary text-white rounded-full flex items-center justify-center">
<i class="fas fa-user"></i>
</div>
<div>
<div class="font-medium text-gray-900 dark:text-white" id="sidebarUserName"></div>
<div class="text-sm text-primary font-medium" id="sidebarUserRole"></div>
</div>
</div>
</div>

<!-- Sélecteur d'entreprise -->
<div id="companySelector" class="p-4 border-b border-gray-200 dark:border-gray-700" style="display: none;">
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
<i class="fas fa-building mr-2"></i>Entreprise Active
</label>
<select id="activeCompanySelect" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option value="">-- Sélectionner une entreprise --</option>
</select>
<div class="mt-2">
<span id="selectedCompanyInfo" class="text-xs text-primary-light font-medium"></span>
</div>
</div>

<!-- Navigation Menu -->
<nav id="navigationMenu" class="flex-1 overflow-y-auto py-4">
<!-- Menu items will be populated by JavaScript -->
</nav>

<!-- Admin Data Management -->
<div id="adminActions" class="p-4 border-t border-gray-200 dark:border-gray-700" style="display: none;">
<button onclick="showAdminDataMenu()" class="w-full text-left text-sm text-gray-600 dark:text-gray-400 hover:text-primary transition-colors">
<i class="fas fa-cog mr-2"></i>Gestion des données
</button>
</div>
</div>
</div>

<!-- Main Content -->
<div class="flex-1 flex flex-col overflow-hidden">
<!-- Header -->
<header class="bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700">
<div class="flex items-center justify-between px-6 py-4">
<div class="flex items-center space-x-4">
<button id="sidebarToggle" class="lg:hidden text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300">
<i class="fas fa-bars text-xl"></i>
</button>
<div>
<h1 class="text-xl font-semibold text-gray-900 dark:text-white" id="currentUser"></h1>
<p class="text-sm text-gray-600 dark:text-gray-400" id="currentCompany"></p>
</div>
</div>

<div class="flex items-center space-x-4">
<!-- Theme Switcher -->
<div class="relative">
<button onclick="toggleThemeMenu()" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300" title="Changer de thème">
<i class="fas fa-palette text-xl"></i>
</button>
<div id="themeMenu" class="hidden absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 z-50">
<div class="py-2">
<button onclick="setTheme('light')" class="w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">
<i class="fas fa-sun mr-2"></i>Thème clair
</button>
<button onclick="setTheme('dark')" class="w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">
<i class="fas fa-moon mr-2"></i>Thème sombre
</button>
<button onclick="setTheme('system')" class="w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">
<i class="fas fa-desktop mr-2"></i>Système
</button>
</div>
</div>
</div>
<!-- Notifications -->
<div class="relative">
<button onclick="toggleNotificationsPanel()" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 relative" title="Notifications">
<i class="fas fa-bell text-xl"></i>
<span id="notificationBadge" class="absolute -top-1 -right-1 bg-danger text-white text-xs rounded-full h-5 w-5 flex items-center justify-center hidden">3</span>
</button>
<div id="notificationsPanel" class="hidden absolute right-0 mt-2 w-80 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 z-50 max-h-96 overflow-y-auto">
<div class="p-4 border-b border-gray-200 dark:border-gray-700">
<h3 class="font-semibold text-gray-900 dark:text-white">Notifications</h3>
</div>
<div id="notificationsList" class="p-2">
<!-- Notifications will be populated here -->
</div>
<div class="p-3 border-t border-gray-200 dark:border-gray-700">
<button onclick="showNotificationSettings()" class="text-primary text-sm hover:text-primary/80">
<i class="fas fa-cog mr-1"></i>Paramètres notifications
</button>
</div>
</div>
</div>
<button onclick="confirmLogout()" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300" title="Se déconnecter">
<i class="fas fa-sign-out-alt text-xl"></i>
</button>
</div>
</div>
</header>

<!-- Main Content Area -->
<main class="flex-1 overflow-y-auto p-6">
<div id="mainContent">
<!-- Content will be populated by JavaScript -->
</div>
</main>
</div>
</div>
</div>

<!-- Modal Container -->
<div id="modalContainer"></div>

<script>
// =============================================================================
// DATA INITIALIZATION - DONNÉES ORIGINALES COMPLÈTES
// =============================================================================

function initializeData() {
// Plan comptable SYSCOHADA Révisé complet (9 classes) - ORIGINAL COMPLET
app.accounts = [
// Classe 1 - Comptes de ressources durables
{ code: '101000', name: 'Capital social', category: 'Capitaux propres' },
{ code: '106000', name: 'Réserves', category: 'Capitaux propres' },
{ code: '110000', name: 'Report à nouveau', category: 'Capitaux propres' },
{ code: '120000', name: 'Résultat de l\'exercice', category: 'Capitaux propres' },
{ code: '161000', name: 'Emprunts et dettes', category: 'Dettes financières' },
{ code: '171000', name: 'Dettes de crédit-bail', category: 'Dettes financières' },

// Classe 2 - Comptes d'actif immobilisé
{ code: '211000', name: 'Terrains', category: 'Immobilisations corporelles' },
{ code: '213000', name: 'Constructions', category: 'Immobilisations corporelles' },
{ code: '218000', name: 'Matériel de transport', category: 'Immobilisations corporelles' },
{ code: '221000', name: 'Logiciels', category: 'Immobilisations incorporelles' },
{ code: '244000', name: 'Matériel et outillage', category: 'Immobilisations corporelles' },
{ code: '241000', name: 'Matériel et mobilier', category: 'Immobilisations corporelles' },

// Classe 3 - Comptes de stocks
{ code: '311000', name: 'Marchandises', category: 'Stocks' },
{ code: '321000', name: 'Matières premières', category: 'Stocks' },
{ code: '371000', name: 'Stock en cours', category: 'Stocks' },
{ code: '381000', name: 'Stocks de produits finis', category: 'Stocks' },

// Classe 4 - Comptes de tiers
{ code: '401000', name: 'Fournisseurs', category: 'Fournisseurs' },
{ code: '411000', name: 'Clients', category: 'Clients' },
{ code: '421000', name: 'Personnel', category: 'Personnel' },
{ code: '431000', name: 'Sécurité sociale', category: 'Organismes sociaux' },
{ code: '441000', name: 'État et collectivités', category: 'État' },
{ code: '471000', name: 'Comptes d\'attente', category: 'Comptes transitoires' },

// Classe 5 - Comptes financiers
{ code: '512000', name: 'Banques', category: 'Comptes bancaires' },
{ code: '531000', name: 'Chèques postaux', category: 'Comptes postaux' },
{ code: '571000', name: 'Caisse', category: 'Caisse' },
{ code: '581000', name: 'Virements internes', category: 'Virements' },

// Classe 6 - Comptes de charges
{ code: '601000', name: 'Achats de marchandises', category: 'Achats' },
{ code: '605000', name: 'Autres achats', category: 'Achats' },
{ code: '621000', name: 'Transports', category: 'Services extérieurs' },
{ code: '622000', name: 'Rémunérations intermédiaires', category: 'Services extérieurs' },
{ code: '631000', name: 'Impôts et taxes', category: 'Impôts et taxes' },
{ code: '641000', name: 'Rémunérations du personnel', category: 'Charges de personnel' },
{ code: '646000', name: 'Charges sociales', category: 'Charges de personnel' },
{ code: '681000', name: 'Dotations aux amortissements', category: 'Dotations' },

// Classe 7 - Comptes de produits
{ code: '701000', name: 'Ventes de marchandises', category: 'Ventes' },
{ code: '706000', name: 'Services vendus', category: 'Ventes' },
{ code: '771000', name: 'Revenus financiers', category: 'Produits financiers' },
{ code: '781000', name: 'Reprises d\'amortissements', category: 'Reprises' },

// Classe 8 - Comptes de résultats
{ code: '801000', name: 'Résultat en instance d\'affectation', category: 'Résultats' },
{ code: '810000', name: 'Résultat net: bénéfice', category: 'Résultats' },
{ code: '820000', name: 'Résultat net: perte', category: 'Résultats' },

// Classe 9 - Comptes analytiques
{ code: '901000', name: 'Coûts de revient', category: 'Comptabilité analytique' },
{ code: '905000', name: 'Coûts de production', category: 'Comptabilité analytique' },
{ code: '910000', name: 'Charges indirectes', category: 'Comptabilité analytique' },
{ code: '920000', name: 'Centres d\'analyse', category: 'Comptabilité analytique' }
];

// Entreprises avec données réalistes - ORIGINAL COMPLET
app.companies = [
{
id: 1,
name: 'SARL TECH INNOVATION',
type: 'SARL',
status: 'Actif',
system: 'Normal',
phone: '+225 07 12 34 56 78',
address: 'Abidjan, Cocody',
cashRegisters: 3
},
{
id: 2,
name: 'SA COMMERCE PLUS',
type: 'SA',
status: 'Actif',
system: 'Normal',
phone: '+225 05 98 76 54 32',
address: 'Abidjan, Plateau',
cashRegisters: 5
},
{
id: 3,
name: 'EURL SERVICES PRO',
type: 'EURL',
status: 'Période d\'essai',
system: 'Minimal',
phone: '+225 01 23 45 67 89',
address: 'Bouaké Centre',
cashRegisters: 2
},
{
id: 4,
name: 'SAS DIGITAL WORLD',
type: 'SAS',
status: 'Suspendu',
system: 'Normal',
phone: '+225 07 11 22 33 44',
address: 'San-Pédro',
cashRegisters: 1
}
];

// Utilisateurs avec profils détaillés - ORIGINAL COMPLET
app.users = [
{
id: 1,
name: 'Admin Système',
email: 'admin@doukecompta.ci',
role: 'Administrateur',
profile: 'admin',
phone: '+225 07 00 00 00 00',
companies: [1, 2, 3, 4],
status: 'Actif'
},
{
id: 2,
name: 'Marie Kouassi',
email: 'marie.kouassi@cabinet.com',
role: 'Collaborateur Senior',
profile: 'collaborateur-senior',
phone: '+225 07 11 11 11 11',
companies: [1, 2, 3],
status: 'Actif'
},
{
id: 3,
name: 'Jean Diabaté',
email: 'jean.diabate@cabinet.com',
role: 'Collaborateur',
profile: 'collaborateur',
phone: '+225 07 22 22 22 22',
companies: [2, 4],
status: 'Actif'
},
{
id: 4,
name: 'Amadou Traoré',
email: 'atraore@sarltech.ci',
role: 'Utilisateur',
profile: 'user',
phone: '+225 07 33 33 33 33',
companies: [1],
status: 'Actif'
},
{
id: 5,
name: 'Ibrahim Koné',
email: 'ikone@caisse.ci',
role: 'Caissier',
profile: 'caissier',
phone: '+225 07 44 44 44 44',
companies: [2],
status: 'Actif'
}
];

// Écritures d'exemple avec données réelles - ORIGINAL COMPLET
app.entries = [
{
id: 1,
date: '2024-12-15',
journal: 'JV',
piece: 'JV-2024-001-0156',
libelle: 'Vente marchandises Client ABC',
companyId: 1,
lines: [
{ account: '411000', accountName: 'Clients', libelle: 'Vente Client ABC', debit: 1800000, credit: 0 },
{ account: '701000', accountName: 'Ventes de marchandises', libelle: 'Vente marchandises', debit: 0, credit: 1500000 },
{ account: '441000', accountName: 'État et collectivités', libelle: 'TVA sur ventes', debit: 0, credit: 300000 }
],
status: 'Validé',
userId: 2
},
{
id: 2,
date: '2024-12-14',
journal: 'JA',
piece: 'JA-2024-001-0157',
libelle: 'Achat marchandises Fournisseur XYZ',
companyId: 1,
lines: [
{ account: '601000', accountName: 'Achats de marchandises', libelle: 'Achat marchandises', debit: 850000, credit: 0 },
{ account: '441000', accountName: 'État et collectivités', libelle: 'TVA déductible', debit: 170000, credit: 0 },
{ account: '401000', accountName: 'Fournisseurs', libelle: 'Fournisseur XYZ', debit: 0, credit: 1020000 }
],
status: 'En attente',
userId: 3
},
{
id: 3,
date: '2024-12-13',
journal: 'JC',
piece: 'JC-2024-002-0034',
libelle: 'Recette caisse vente comptant',
companyId: 2,
lines: [
{ account: '571000', accountName: 'Caisse', libelle: 'Encaissement espèces', debit: 150000, credit: 0 },
{ account: '701000', accountName: 'Ventes de marchandises', libelle: 'Vente comptant', debit: 0, credit: 150000 }
],
status: 'Validé',
userId: 5
}
];

// Initialiser les caisses - ORIGINAL COMPLET
app.cashRegisters = [
{
id: 1,
name: 'Caisse Principale',
companyId: 2,
responsibleId: 5,
responsibleName: 'Ibrahim Koné',
balance: 210000,
status: 'Ouvert',
openingBalance: 150000,
dailyReceipts: 85000,
dailyExpenses: 25000
},
{
id: 2,
name: 'Caisse Ventes',
companyId: 2,
responsibleId: null,
responsibleName: 'Fatou Diallo',
balance: 85000,
status: 'Ouvert',
openingBalance: 100000,
dailyReceipts: 35000,
dailyExpenses: 50000
},
{
id: 3,
name: 'Caisse Réception',
companyId: 1,
responsibleId: null,
responsibleName: 'Non assigné',
balance: 0,
status: 'Fermé',
openingBalance: 0,
dailyReceipts: 0,
dailyExpenses: 0
}
];

console.log('✅ Données initialisées avec succès');
}

// =============================================================================
// THEME MANAGEMENT - FONCTION ORIGINALE COMPLÈTE
// =============================================================================

function toggleThemeMenu() {
const menu = document.getElementById('themeMenu');
if (menu) {
menu.classList.toggle('hidden');
}
}

function setTheme(theme) {
try {
themeManager.setTheme(theme);
document.getElementById('themeMenu').classList.add('hidden');
showSuccessMessage('✅ Thème modifié : ' + theme);
} catch (error) {
console.error('Erreur changement thème:', error);
}
}

// Close theme menu when clicking outside
document.addEventListener('click', function(e) {
const menu = document.getElementById('themeMenu');
const button = e.target.closest('[onclick="toggleThemeMenu()"]');
if (menu && !menu.contains(e.target) && !button) {
menu.classList.add('hidden');
}

// Close notifications panel when clicking outside
const notifPanel = document.getElementById('notificationsPanel');
const notifButton = e.target.closest('[onclick="toggleNotificationsPanel()"]');
if (notifPanel && !notifPanel.contains(e.target) && !notifButton) {
notifPanel.classList.add('hidden');
}
});

// =============================================================================
// LOGO MANAGEMENT - FONCTION ORIGINALE COMPLÈTE
// =============================================================================

function uploadLogo() {
const input = document.createElement('input');
input.type = 'file';
input.accept = 'image/*';
input.onchange = function(e) {
const file = e.target.files[0];
if (file) {
if (file.size > 2 * 1024 * 1024) {
alert('❌ Le fichier est trop volumineux. Taille maximum: 2 MB');
return;
}

const reader = new FileReader();
reader.onload = function(e) {
app.companyLogo = e.target.result;

// Update logo display everywhere in the application
updateLogoGlobally();
showSuccessMessage('✅ Logo uploadé et appliqué à toute l\'application !');
console.log('✅ Logo uploadé');
};
reader.readAsDataURL(file);
}
};
input.click();
}

function updateLogoGlobally() {
if (!app.companyLogo) return;

// Update main logo in sidebar
const logoElement = document.getElementById('appLogo');
if (logoElement) {
logoElement.innerHTML = `<img src="${app.companyLogo}" alt="Logo" class="w-8 h-8 rounded object-cover">`;
}

// Update all company logos
const logoElements = document.querySelectorAll('.company-logo');
logoElements.forEach(element => {
if (element.classList.contains('w-20')) {
element.innerHTML = `<img src="${app.companyLogo}" alt="Logo" class="w-20 h-20 rounded-full object-cover shadow-lg">`;
} else {
element.innerHTML = `<img src="${app.companyLogo}" alt="Logo" class="w-8 h-8 rounded object-cover">`;
}
});

// Update logo in settings page if visible
const settingsLogo = document.querySelector('.w-16.h-16.bg-gray-100, .w-16.h-16.bg-gray-700');
if (settingsLogo) {
settingsLogo.innerHTML = `<img src="${app.companyLogo}" alt="Logo" class="w-full h-full object-cover rounded-lg">`;
}
}

// =============================================================================
// AUTHENTICATION & USER MANAGEMENT - FONCTIONS ORIGINALES COMPLÈTES
// =============================================================================

function loginAs(profile) {
const credentials = {
'admin': { email: 'admin@doukecompta.ci', password: 'admin123' },
'collaborateur-senior': { email: 'marie.kouassi@cabinet.com', password: 'collab123' },
'collaborateur': { email: 'jean.diabate@cabinet.com', password: 'collab123' },
'user': { email: 'atraore@sarltech.ci', password: 'user123' },
'caissier': { email: 'ikone@caisse.ci', password: 'caisse123' }
};

const cred = credentials[profile];
if (cred) {
document.getElementById('loginEmail').value = cred.email;
document.getElementById('loginPassword').value = cred.password;
handleLogin();
}
}

function handleLogin() {
const email = document.getElementById('loginEmail').value;
const password = document.getElementById('loginPassword').value;

if (!email || !password) {
alert('❌ Veuillez saisir votre email et mot de passe.');
return;
}

// Base de données des utilisateurs - ORIGINALE COMPLÈTE
const users = {
'admin@doukecompta.ci': {
password: 'admin123',
profile: 'admin',
name: 'Admin Système',
role: 'Administrateur',
id: 1
},
'marie.kouassi@cabinet.com': {
password: 'collab123',
profile: 'collaborateur-senior',
name: 'Marie Kouassi',
role: 'Collaborateur Senior',
id: 2
},
'jean.diabate@cabinet.com': {
password: 'collab123',
profile: 'collaborateur',
name: 'Jean Diabaté',
role: 'Collaborateur',
id: 3
},
'atraore@sarltech.ci': {
password: 'user123',
profile: 'user',
name: 'Amadou Traoré',
role: 'Utilisateur',
id: 4
},
'ikone@caisse.ci': {
password: 'caisse123',
profile: 'caissier',
name: 'Ibrahim Koné',
role: 'Caissier',
id: 5
}
};

const user = users[email];
if (user && user.password === password) {
app.isAuthenticated = true;
app.currentProfile = user.profile;
app.currentUser = {
id: user.id,
name: user.name,
email: email,
role: user.role
};

// Auto-sélection d'entreprise pour utilisateur et caissier
if (user.profile === 'user') {
app.currentCompany = '1';
} else if (user.profile === 'caissier') {
app.currentCompany = '2';
}

showMainApp();
console.log('✅ Connexion réussie:', user.name);
} else {
alert('❌ Identifiants incorrects. Utilisez les comptes de démonstration.');
}
}

function showRegisterForm() {
const registerModal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-lg mx-4 max-h-[90vh] overflow-y-auto" onclick="event.stopPropagation()">
<div class="text-center mb-6">
<div class="w-16 h-16 bg-primary text-white rounded-full flex items-center justify-center mx-auto mb-4">
<i class="fas fa-user-plus text-2xl"></i>
</div>
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">Inscription</h2>
<p class="text-gray-600 dark:text-gray-400 mt-2">Créer votre compte</p>
</div>

<form id="registerForm" class="space-y-4">
<div class="grid grid-cols-2 gap-4">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Prénom</label>
<input type="text" id="regFirstName" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent">
</div>
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Nom</label>
<input type="text" id="regLastName" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent">
</div>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email</label>
<input type="email" id="regEmail" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Numéro de téléphone</label>
<input type="tel" id="regPhone" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent" placeholder="+225 07 XX XX XX XX">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Nom de l'entreprise</label>
<input type="text" id="regCompanyName" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Type d'entreprise</label>
<select id="regCompanyType" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent">
<option value="">-- Sélectionner le type --</option>
<option value="SARL">SARL - Société à Responsabilité Limitée</option>
<option value="SA">SA - Société Anonyme</option>
<option value="EURL">EURL - Entreprise Unipersonnelle à Responsabilité Limitée</option>
<option value="SAS">SAS - Société par Actions Simplifiée</option>
<option value="SNC">SNC - Société en Nom Collectif</option>
<option value="EI">EI - Entreprise Individuelle</option>
</select>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Mot de passe</label>
<input type="password" id="regPassword" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Confirmer le mot de passe</label>
<input type="password" id="regConfirmPassword" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base focus:ring-2 focus:ring-primary focus:border-transparent">
</div>

<div class="bg-info/10 p-4 rounded-lg">
<p class="text-sm text-info">
<i class="fas fa-info-circle mr-2"></i>
Votre compte sera créé avec le profil <strong>"Utilisateur"</strong>.
Vous pourrez gérer uniquement votre entreprise.
</p>
</div>

<button type="submit" class="w-full bg-primary hover:bg-primary/90 text-white py-3 rounded-lg font-medium transition-colors">
Créer mon compte
</button>
</form>

<div class="mt-6 flex justify-between">
<button onclick="showLoginInterface()" class="text-primary hover:text-primary/80 font-medium">← Retour à la connexion</button>
<button onclick="closeModal()" class="text-gray-500 hover:text-gray-700">Fermer</button>
</div>
</div>
</div>
`;

document.getElementById('modalContainer').innerHTML = registerModal;

setTimeout(() => {
const registerForm = document.getElementById('registerForm');
if (registerForm) {
registerForm.addEventListener('submit', function(e) {
e.preventDefault();
handleRegister();
});
}
}, 100);
}

function handleRegister() {
const firstName = document.getElementById('regFirstName').value;
const lastName = document.getElementById('regLastName').value;
const email = document.getElementById('regEmail').value;
const phone = document.getElementById('regPhone').value;
const companyName = document.getElementById('regCompanyName').value;
const companyType = document.getElementById('regCompanyType').value;
const password = document.getElementById('regPassword').value;
const confirmPassword = document.getElementById('regConfirmPassword').value;

if (password !== confirmPassword) {
alert('❌ Les mots de passe ne correspondent pas.');
return;
}

// Simuler la création du compte
const newUser = {
id: app.users.length + 1,
name: `${firstName} ${lastName}`,
email: email,
phone: phone,
role: 'Utilisateur',
profile: 'user',
companies: [],
status: 'Actif'
};

const newCompany = {
id: app.companies.length + 1,
name: companyName,
type: companyType,
status: 'Période d\'essai',
system: 'Normal',
phone: phone,
address: '',
cashRegisters: 1
};

app.users.push(newUser);
app.companies.push(newCompany);

closeModal();
alert('✅ Inscription réussie ! Votre compte a été créé avec le profil "Utilisateur". Vous pouvez maintenant vous connecter.');
}

function showForgotPassword() {
alert('📧 Un email de récupération sera envoyé à votre adresse (fonctionnalité à implémenter).');
}

function showLoginInterface() {
document.getElementById('loginInterface').classList.remove('hidden');
document.getElementById('mainApp').classList.add('hidden');
document.getElementById('modalContainer').innerHTML = '';
app.isAuthenticated = false;
app.currentProfile = null;
app.currentUser = null;
app.currentCompany = null;
}

function showMainApp() {
document.getElementById('loginInterface').classList.add('hidden');
document.getElementById('mainApp').classList.remove('hidden');
initializeApp();
}

function confirmLogout() {
const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-md mx-4">
<div class="text-center mb-6">
<div class="w-16 h-16 bg-warning text-white rounded-full flex items-center justify-center mx-auto mb-4">
<i class="fas fa-sign-out-alt text-2xl"></i>
</div>
<h3 class="text-xl font-bold text-gray-900 dark:text-white">Confirmer la déconnexion</h3>
<p class="text-gray-600 dark:text-gray-400 mt-2">Êtes-vous sûr de vouloir vous déconnecter ?</p>
</div>
<div class="flex justify-center space-x-4">
<button onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors">
Annuler
</button>
<button onclick="logout()" class="bg-danger hover:bg-danger/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-sign-out-alt mr-2"></i>Se déconnecter
</button>
</div>
</div>
</div>
`;
document.getElementById('modalContainer').innerHTML = modal;
}

function logout() {
closeModal();
showLoginInterface();
showSuccessMessage('✅ Déconnexion réussie. À bientôt !');
}

// =============================================================================
// SYSCOHADA RÉVISÉ JOURNALS MANAGEMENT - FONCTION ORIGINALE COMPLÈTE
// =============================================================================

function getSyscohadaJournals() {
return {
'JG': { name: 'Journal Général', prefix: 'JG', description: 'Toutes opérations non spécialisées' },
'JA': { name: 'Journal des Achats', prefix: 'JA', description: 'Achats et charges externes' },
'JV': { name: 'Journal des Ventes', prefix: 'JV', description: 'Ventes et produits d\'exploitation' },
'JB': { name: 'Journal de Banque', prefix: 'JB', description: 'Opérations bancaires' },
'JC': { name: 'Journal de Caisse', prefix: 'JC', description: 'Opérations de caisse' },
'JOD': { name: 'Journal des Opérations Diverses', prefix: 'JOD', description: 'Écritures de régularisation' }
};
}

function generateJournalNumber(journalCode, companyId) {
const year = new Date().getFullYear();
const journals = getSyscohadaJournals();
const journal = journals[journalCode];

if (!journal) return 'ERR-001';

// Numérotation chronologique sécurisée
const nextNumber = Date.now() % 10000;
return `${journal.prefix}-${year}-${String(companyId || '001').padStart(3, '0')}-${String(nextNumber).padStart(4, '0')}`;
}

// =============================================================================
// NAVIGATION & INTERFACE MANAGEMENT - FONCTIONS ORIGINALES COMPLÈTES
// =============================================================================

function loadNavigationMenu() {
const menuItems = {
admin: [
{ id: 'dashboard', icon: 'fas fa-chart-pie', text: 'Tableau de Bord Admin', active: true },
{ id: 'users', icon: 'fas fa-users', text: 'Gestion Collaborateurs' },
{ id: 'companies', icon: 'fas fa-building', text: 'Gestion Entreprises' },
{ id: 'entries', icon: 'fas fa-edit', text: 'Écritures Comptables' },
{ id: 'accounts', icon: 'fas fa-list', text: 'Plan Comptable' },
{ id: 'caisse', icon: 'fas fa-cash-register', text: 'Gestion Caisses' },
{ id: 'reports', icon: 'fas fa-chart-bar', text: 'Rapports & États' },
{ id: 'import', icon: 'fas fa-upload', text: 'Import Balances' },
{ id: 'settings', icon: 'fas fa-user-cog', text: 'Mon Profil' }
],
'collaborateur-senior': [
{ id: 'dashboard', icon: 'fas fa-chart-pie', text: 'Tableau de Bord', active: true },
{ id: 'companies', icon: 'fas fa-building', text: 'Mes Entreprises' },
{ id: 'entries', icon: 'fas fa-edit', text: 'Écritures Comptables' },
{ id: 'accounts', icon: 'fas fa-list', text: 'Plan Comptable' },
{ id: 'caisse', icon: 'fas fa-cash-register', text: 'Gestion Caisses' },
{ id: 'reports', icon: 'fas fa-chart-bar', text: 'Rapports & États' },
{ id: 'import', icon: 'fas fa-upload', text: 'Import Balances' },
{ id: 'settings', icon: 'fas fa-user-cog', text: 'Mon Profil' }
],
collaborateur: [
{ id: 'dashboard', icon: 'fas fa-chart-pie', text: 'Tableau de Bord', active: true },
{ id: 'companies', icon: 'fas fa-building', text: 'Mes Entreprises' },
{ id: 'entries', icon: 'fas fa-edit', text: 'Écritures Comptables' },
{ id: 'accounts', icon: 'fas fa-list', text: 'Plan Comptable' },
{ id: 'caisse', icon: 'fas fa-cash-register', text: 'Gestion Caisses' },
{ id: 'reports', icon: 'fas fa-chart-bar', text: 'Rapports & États' },
{ id: 'import', icon: 'fas fa-upload', text: 'Import Balances' },
{ id: 'settings', icon: 'fas fa-user-cog', text: 'Mon Profil' }
],
user: [
{ id: 'dashboard', icon: 'fas fa-chart-pie', text: 'Mon Entreprise', active: true },
{ id: 'entries', icon: 'fas fa-edit', text: 'Mes Écritures' },
{ id: 'accounts', icon: 'fas fa-list', text: 'Plan Comptable' },
{ id: 'caisse', icon: 'fas fa-cash-register', text: 'Mes Caisses' },
{ id: 'reports', icon: 'fas fa-chart-bar', text: 'Mes Rapports' },
{ id: 'import', icon: 'fas fa-upload', text: 'Import Balance' },
{ id: 'settings', icon: 'fas fa-user-cog', text: 'Mon Profil' }
],
caissier: [
{ id: 'dashboard', icon: 'fas fa-cash-register', text: 'Ma Caisse', active: true },
{ id: 'entries', icon: 'fas fa-edit', text: 'Opérations Caisse' },
{ id: 'accounts', icon: 'fas fa-list', text: 'Comptes Disponibles' },
{ id: 'reports', icon: 'fas fa-chart-bar', text: 'État de Caisse' },
{ id: 'settings', icon: 'fas fa-user-cog', text: 'Mon Profil' }
]
};

const items = menuItems[app.currentProfile] || menuItems.user;
const menuHtml = items.map(item => `
<a href="#" onclick="navigateTo('${item.id}'); return false;" class="flex items-center px-6 py-3 text-gray-700 dark:text-gray-300 hover:bg-primary hover:text-white transition-colors ${item.active ? 'bg-primary text-white' : ''}">
<i class="${item.icon} w-5 h-5 mr-3"></i>
<span>${item.text}</span>
</a>
`).join('');

document.getElementById('navigationMenu').innerHTML = menuHtml;
}

function navigateTo(page, element = null) {
// Remove active class from all menu items
document.querySelectorAll('#navigationMenu a').forEach(item => {
item.classList.remove('bg-primary', 'text-white');
item.classList.add('text-gray-700', 'dark:text-gray-300');
});

// Add active class to clicked item
if (element) {
element.classList.add('bg-primary', 'text-white');
element.classList.remove('text-gray-700', 'dark:text-gray-300');
} else {
// Find the clicked element from event if available
try {
const clickedElement = event.target.closest('a');
if (clickedElement && clickedElement.parentElement.id === 'navigationMenu') {
clickedElement.classList.add('bg-primary', 'text-white');
clickedElement.classList.remove('text-gray-700', 'dark:text-gray-300');
}
} catch (e) {
// Ignore error if event is not available
}
}

console.log('🔄 Navigation vers:', page);

// Load page content with error handling
try {
switch(page) {
case 'dashboard':
loadDashboard();
break;
case 'users':
loadUsersManagement();
break;
case 'companies':
loadCompanies();
break;
case 'entries':
loadEntries();
break;
case 'accounts':
loadAccounts();
break;
case 'caisse':
loadCaisse();
break;
case 'reports':
loadReports();
break;
case 'import':
loadImport();
break;
case 'settings':
loadSettings();
break;
default:
console.log('⚠️ Page inconnue, chargement du dashboard');
loadDashboard();
}
} catch (error) {
console.error('❌ Erreur lors du chargement de la page:', error);
showErrorMessage('Erreur lors du chargement de la page: ' + page);
}
}

function updateUserInfo() {
const profiles = {
'admin': { showSelector: true, defaultCompany: 'Aucune entreprise sélectionnée' },
'collaborateur-senior': { showSelector: true, defaultCompany: 'Aucune entreprise sélectionnée' },
'collaborateur': { showSelector: true, defaultCompany: 'Aucune entreprise sélectionnée' },
'user': { showSelector: false, defaultCompany: 'SARL TECH INNOVATION' },
'caissier': { showSelector: false, defaultCompany: 'SA COMMERCE PLUS' }
};

const profile = profiles[app.currentProfile];

document.getElementById('currentUser').textContent = app.currentUser.name;
document.getElementById('currentCompany').textContent = app.currentCompany ? getCompanyName() : profile.defaultCompany;
document.getElementById('sidebarUserName').textContent = app.currentUser.name;
document.getElementById('sidebarUserRole').textContent = app.currentUser.role;

// Gestion de l'affichage du sélecteur d'entreprise
const companySelector = document.getElementById('companySelector');
const adminActions = document.getElementById('adminActions');

if (companySelector) {
companySelector.style.display = profile.showSelector ? 'block' : 'none';

// Peupler le sélecteur
if (profile.showSelector) {
populateCompanySelector();
}
}

// Affichage des actions admin uniquement pour les administrateurs
if (adminActions) {
adminActions.style.display = app.currentProfile === 'admin' ? 'block' : 'none';
}

// Appliquer le logo s'il existe
updateLogoGlobally();
}

function populateCompanySelector() {
const select = document.getElementById('activeCompanySelect');
if (select) {
select.innerHTML = '<option value="">-- Sélectionner une entreprise --</option>';

app.companies.forEach(company => {
const option = document.createElement('option');
option.value = company.id;
option.textContent = company.name;
if (company.id == app.currentCompany) {
option.selected = true;
}
select.appendChild(option);
});
}
}

function getCompanyName() {
if (!app.currentCompany) return 'Aucune entreprise sélectionnée';

const company = app.companies.find(c => c.id == app.currentCompany);
return company ? company.name : 'Entreprise inconnue';
}

function updateSelectedCompanyInfo() {
const company = app.companies.find(c => c.id == app.currentCompany);
const infoElement = document.getElementById('selectedCompanyInfo');
const currentCompanyElement = document.getElementById('currentCompany');

if (company) {
if (infoElement) {
infoElement.innerHTML = `${company.system} • ${company.status}`;
}
if (currentCompanyElement) {
currentCompanyElement.textContent = company.name;
}
} else {
if (infoElement) {
infoElement.innerHTML = '';
}
if (currentCompanyElement) {
currentCompanyElement.textContent = 'Aucune entreprise sélectionnée';
}
}
}

// =============================================================================
// DASHBOARD FUNCTIONS - FONCTIONS ORIGINALES COMPLÈTES
// =============================================================================

function loadDashboard() {
if (app.currentProfile === 'admin') {
loadAdminDashboard();
} else {
loadStandardDashboard();
}
}

function loadAdminDashboard() {
const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">Tableau de Bord Administrateur</h2>
<div class="text-sm text-primary-light font-medium">
<i class="fas fa-clock mr-1"></i>Dernière mise à jour: ${new Date().toLocaleString('fr-FR')}
</div>
</div>

<!-- KPI Cards Admin -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border-l-4 border-primary">
<div class="flex items-center justify-between">
<div>
<p class="text-sm font-medium text-gray-600 dark:text-gray-400">Entreprises Actives</p>
<p class="text-3xl font-bold text-gray-900 dark:text-white">${app.companies.filter(c => c.status === 'Actif').length}</p>
</div>
<div class="bg-primary/10 p-3 rounded-lg">
<i class="fas fa-building text-primary text-xl"></i>
</div>
</div>
<div class="mt-2 flex items-center text-sm">
<span class="text-success">+2</span>
<span class="text-gray-500 dark:text-gray-400 ml-1">ce mois</span>
</div>
</div>

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border-l-4 border-info">
<div class="flex items-center justify-between">
<div>
<p class="text-sm font-medium text-gray-600 dark:text-gray-400">Collaborateurs Actifs</p>
<p class="text-3xl font-bold text-gray-900 dark:text-white">${app.users.filter(u => u.profile.includes('collaborateur')).length}</p>
</div>
<div class="bg-info/10 p-3 rounded-lg">
<i class="fas fa-users text-info text-xl"></i>
</div>
</div>
</div>

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border-l-4 border-warning">
<div class="flex items-center justify-between">
<div>
<p class="text-sm font-medium text-gray-600 dark:text-gray-400">Écritures en Attente</p>
<p class="text-3xl font-bold text-gray-900 dark:text-white">${app.entries.filter(e => e.status === 'En attente').length}</p>
</div>
<div class="bg-warning/10 p-3 rounded-lg">
<i class="fas fa-exclamation-triangle text-warning text-xl"></i>
</div>
</div>
</div>

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border-l-4 border-success">
<div class="flex items-center justify-between">
<div>
<p class="text-sm font-medium text-gray-600 dark:text-gray-400">Écritures Validées</p>
<p class="text-3xl font-bold text-gray-900 dark:text-white">${app.entries.filter(e => e.status === 'Validé').length}</p>
</div>
<div class="bg-success/10 p-3 rounded-lg">
<i class="fas fa-check text-success text-xl"></i>
</div>
</div>
</div>
</div>

<!-- Portefeuille Collaborateurs -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
<i class="fas fa-briefcase mr-2 text-primary"></i>Portefeuille des Collaborateurs
</h3>
<div class="space-y-4">
${generateCollaboratorPortfolio()}
</div>
</div>

<!-- Charts Admin -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Évolution du Portefeuille</h3>
<div class="h-64 flex items-center justify-center">
<canvas id="portfolioChart" width="400" height="200"></canvas>
</div>
</div>
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Performance par Secteur</h3>
<div class="h-64 flex items-center justify-center">
<canvas id="sectorChart" width="400" height="200"></canvas>
</div>
</div>
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;
// Chargement différé des graphiques
setTimeout(() => {
try {
initializeAdminCharts();
} catch (error) {
console.error('Erreur chargement graphiques admin:', error);
}
}, 200);
}

function loadStandardDashboard() {
const userCompany = app.companies.find(c => c.id == app.currentCompany);
let cashCount = userCompany ? userCompany.cashRegisters : 1;
let dashboardTitle = 'Tableau de Bord';

if (app.currentProfile === 'user') {
dashboardTitle = 'Mon Entreprise';
} else if (app.currentProfile === 'caissier') {
dashboardTitle = 'Ma Caisse';
cashCount = '→'; // Bouton d'accès rapide pour le caissier
}

const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">${dashboardTitle}</h2>
<div class="text-sm text-primary-light font-medium">
<i class="fas fa-clock mr-1"></i>Dernière mise à jour: ${new Date().toLocaleString('fr-FR')}
</div>
</div>

<!-- KPI Cards Standard -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border-l-4 border-primary">
<div class="flex items-center justify-between">
<div>
<p class="text-sm font-medium text-gray-600 dark:text-gray-400">
${app.currentProfile === 'user' ? 'Caisses disponibles' :
app.currentProfile === 'caissier' ? 'Accès rapide écritures' : 'Entreprises'}
</p>
<p class="text-3xl font-bold text-gray-900 dark:text-white">${cashCount}</p>
</div>
<div class="bg-primary/10 p-3 rounded-lg">
<i class="fas ${app.currentProfile === 'caissier' ? 'fa-plus-circle' :
app.currentProfile === 'user' ? 'fa-cash-register' : 'fa-building'} text-primary text-xl"></i>
</div>
</div>
${app.currentProfile === 'caissier' ? `
<div class="mt-3">
<button onclick="navigateTo('entries')" class="w-full bg-primary text-white py-2 rounded-lg text-sm hover:bg-primary/90 transition-colors">
Nouvelle opération
</button>
</div>
` : ''}
</div>

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border-l-4 border-success">
<div class="flex items-center justify-between">
<div>
<p class="text-sm font-medium text-gray-600 dark:text-gray-400">Écritures ce mois</p>
<p class="text-3xl font-bold text-gray-900 dark:text-white">
${app.currentProfile === 'caissier' ? '45' : app.entries.length}
</p>
</div>
<div class="bg-success/10 p-3 rounded-lg">
<i class="fas fa-edit text-success text-xl"></i>
</div>
</div>
</div>

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border-l-4 border-warning">
<div class="flex items-center justify-between">
<div>
<p class="text-sm font-medium text-gray-600 dark:text-gray-400">En attente validation</p>
<p class="text-3xl font-bold text-gray-900 dark:text-white">
${app.entries.filter(e => e.status === 'En attente').length}
</p>
</div>
<div class="bg-warning/10 p-3 rounded-lg">
<i class="fas fa-clock text-warning text-xl"></i>
</div>
</div>
</div>

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border-l-4 border-info">
<div class="flex items-center justify-between">
<div>
<p class="text-sm font-medium text-gray-600 dark:text-gray-400">Performance</p>
<p class="text-3xl font-bold text-gray-900 dark:text-white">98%</p>
</div>
<div class="bg-info/10 p-3 rounded-lg">
<i class="fas fa-chart-line text-info text-xl"></i>
</div>
</div>
</div>
</div>

<!-- Charts Standard -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Évolution Mensuelle</h3>
<div class="h-64 flex items-center justify-center">
<canvas id="monthlyChart" width="400" height="200"></canvas>
</div>
</div>
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Répartition par Journal</h3>
<div class="h-64 flex items-center justify-center">
<canvas id="journalChart" width="400" height="200"></canvas>
</div>
</div>
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;
// Chargement différé des graphiques
setTimeout(() => {
try {
initializeStandardCharts();
} catch (error) {
console.error('Erreur chargement graphiques standard:', error);
}
}, 200);
}

// =============================================================================
// ENTRIES MANAGEMENT - FONCTION COMPLÈTE RESTAURÉE
// =============================================================================

function loadEntries() {
// Vérification de la sélection d'entreprise pour admin/collaborateur
if ((app.currentProfile === 'admin' || app.currentProfile.includes('collaborateur')) && !app.currentCompany) {
showCompanySelectionWarning('écritures comptables');
return;
}

const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
${app.currentProfile === 'caissier' ? 'Opérations Caisse' : 'Écritures Comptables'}
</h2>
<div class="flex items-center space-x-4">
<div class="text-sm font-medium text-primary-light bg-primary/10 px-3 py-1 rounded-lg">
<i class="fas fa-building mr-2"></i><span>${getCompanyName()}</span>
</div>
<button onclick="openNewEntryModal()" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-plus mr-2"></i>Nouvelle écriture
</button>
</div>
</div>

<!-- Filtres et recherche -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<div class="grid grid-cols-1 md:grid-cols-4 gap-4">
<input type="text" placeholder="Rechercher..." class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<select class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option>Tous les journaux</option>
<option>Journal Général (JG)</option>
<option>Journal des Achats (JA)</option>
<option>Journal des Ventes (JV)</option>
<option>Journal de Banque (JB)</option>
<option>Journal de Caisse (JC)</option>
<option>Journal des Opérations Diverses (JOD)</option>
</select>
<select class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option>Tous les statuts</option>
<option>Validé</option>
<option>En attente</option>
<option>Brouillon</option>
</select>
<input type="date" class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>
</div>

<!-- Liste des écritures -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">
<div class="p-6 border-b border-gray-200 dark:border-gray-700">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
${app.currentProfile === 'caissier' ? 'Mes Opérations de Caisse' : 'Liste des Écritures'}
</h3>
</div>
<div class="overflow-x-auto">
<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
<thead class="bg-gray-50 dark:bg-gray-700">
<tr>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Date</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Journal</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">N° Pièce</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Libellé</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Montant</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Statut</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
</tr>
</thead>
<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
${generateEntriesRows()}
</tbody>
</table>
</div>
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;
}

function openNewEntryModal() {
const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" onclick="closeModalOnBackground(event)">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-5xl mx-4 max-h-[90vh] overflow-y-auto" onclick="event.stopPropagation()">
<div class="flex justify-between items-center mb-6">
<h3 class="text-xl font-bold text-gray-900 dark:text-white">
<i class="fas fa-edit mr-2 text-primary"></i>Nouvelle Écriture SYSCOHADA Révisé
</h3>
<button onclick="closeModal()" class="text-gray-500 hover:text-gray-700">
<i class="fas fa-times text-xl"></i>
</button>
</div>

<form id="entryForm" class="space-y-6">
<!-- En-tête de l'écriture -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-4">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Date</label>
<input type="date" id="entryDate" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" value="${new Date().toISOString().split('T')[0]}">
</div>

${app.currentProfile !== 'caissier' ? `
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Journal</label>
<select id="entryJournal" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" onchange="generatePieceNumber()">
<option value="JG">Journal Général (JG)</option>
<option value="JA">Journal des Achats (JA)</option>
<option value="JV">Journal des Ventes (JV)</option>
<option value="JB">Journal de Banque (JB)</option>
<option value="JC">Journal de Caisse (JC)</option>
<option value="JOD">Journal des Opérations Diverses (JOD)</option>
</select>
</div>
` : ''}

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">N° Pièce</label>
<input type="text" id="entryPiece" readonly class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-600 text-gray-900 dark:text-white text-base" placeholder="Auto-généré">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Libellé général</label>
<input type="text" id="entryLibelle" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" placeholder="Libellé de l'opération">
</div>
</div>

<!-- Lignes d'écriture -->
<div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">
<div class="flex justify-between items-center mb-4">
<h4 class="text-lg font-semibold text-gray-900 dark:text-white">Lignes d'écriture</h4>
<button type="button" onclick="addEntryLine()" class="bg-info hover:bg-info/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-plus mr-2"></i>Ajouter ligne
</button>
</div>

<div class="overflow-x-auto">
<table class="min-w-full" id="entryLinesTable">
<thead>
<tr class="border-b border-gray-200 dark:border-gray-700">
<th class="text-left py-2 px-3 text-sm font-medium text-gray-700 dark:text-gray-300">
${app.currentProfile === 'caissier' ? 'Intitulé Compte' : 'Compte'}
</th>
<th class="text-left py-2 px-3 text-sm font-medium text-gray-700 dark:text-gray-300">Libellé</th>
<th class="text-left py-2 px-3 text-sm font-medium text-gray-700 dark:text-gray-300">Débit (FCFA)</th>
<th class="text-left py-2 px-3 text-sm font-medium text-gray-700 dark:text-gray-300">Crédit (FCFA)</th>
<th class="text-left py-2 px-3 text-sm font-medium text-gray-700 dark:text-gray-300">Action</th>
</tr>
</thead>
<tbody id="entryLinesBody">
<!-- Les lignes seront ajoutées ici -->
</tbody>
</table>
</div>

<div class="mt-4 flex justify-end space-x-6 text-sm">
<div class="text-right">
<div class="text-gray-600 dark:text-gray-400">Total Débit</div>
<div class="font-bold text-gray-900 dark:text-white" id="totalDebit">0 FCFA</div>
</div>
<div class="text-right">
<div class="text-gray-600 dark:text-gray-400">Total Crédit</div>
<div class="font-bold text-gray-900 dark:text-white" id="totalCredit">0 FCFA</div>
</div>
<div class="text-right">
<div class="text-gray-600 dark:text-gray-400">Équilibre</div>
<div class="font-bold" id="balance">0 FCFA</div>
</div>
</div>
</div>

<div class="flex justify-end space-x-4">
<button type="button" onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors">
Annuler
</button>
<button type="submit" class="bg-success hover:bg-success/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-save mr-2"></i>
${app.currentProfile === 'caissier' ? 'Envoyer pour validation' : 'Enregistrer'}
</button>
</div>
</form>
</div>
</div>
`;

document.getElementById('modalContainer').innerHTML = modal;

// Initialiser les lignes et événements
setTimeout(() => {
addEntryLine();
addEntryLine();
generatePieceNumber();

// Event listeners
const entryForm = document.getElementById('entryForm');
if (entryForm) {
entryForm.addEventListener('submit', function(e) {
e.preventDefault();
saveEntry();
});
}
}, 100);
}

function addEntryLine() {
const tbody = document.getElementById('entryLinesBody');
const lineCount = tbody.children.length;

const row = document.createElement('tr');
row.innerHTML = `
<td class="py-2 px-3">
${app.currentProfile === 'caissier' ? `
<input type="text" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base account-input" placeholder="Ex: Recettes ventes">
` : `
<select class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base account-select">
<option value="">-- Sélectionner un compte --</option>
${app.accounts.map(acc => `<option value="${acc.code}">${acc.code} - ${acc.name}</option>`).join('')}
</select>
`}
</td>
<td class="py-2 px-3">
<input type="text" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base libelle-input" placeholder="Libellé de la ligne">
</td>
<td class="py-2 px-3">
<input type="number" step="0.01" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base debit-input" placeholder="0.00" oninput="updateTotals()" onchange="clearOppositeField(this, 'credit')">
</td>
<td class="py-2 px-3">
<input type="number" step="0.01" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base credit-input" placeholder="0.00" oninput="updateTotals()" onchange="clearOppositeField(this, 'debit')">
</td>
<td class="py-2 px-3">
<button type="button" onclick="removeEntryLine(this)" class="text-danger hover:text-danger/80">
<i class="fas fa-trash"></i>
</button>
</td>
`;

tbody.appendChild(row);
updateTotals();
}

function clearOppositeField(currentInput, oppositeType) {
const row = currentInput.closest('tr');
if (currentInput.value && parseFloat(currentInput.value) > 0) {
const oppositeInput = row.querySelector(`.${oppositeType}-input`);
if (oppositeInput) {
oppositeInput.value = '';
}
}
updateTotals();
}

function removeEntryLine(button) {
const tbody = document.getElementById('entryLinesBody');
if (tbody.children.length > 2) {
button.closest('tr').remove();
updateTotals();
} else {
alert('❌ Une écriture doit contenir au moins 2 lignes.');
}
}

function updateTotals() {
const debitInputs = document.querySelectorAll('.debit-input');
const creditInputs = document.querySelectorAll('.credit-input');

let totalDebit = 0;
let totalCredit = 0;

debitInputs.forEach(input => {
totalDebit += parseFloat(input.value) || 0;
});

creditInputs.forEach(input => {
totalCredit += parseFloat(input.value) || 0;
});

const balance = totalDebit - totalCredit;

const totalDebitElement = document.getElementById('totalDebit');
const totalCreditElement = document.getElementById('totalCredit');
const balanceElement = document.getElementById('balance');

if (totalDebitElement) {
totalDebitElement.textContent = totalDebit.toLocaleString('fr-FR') + ' FCFA';
}
if (totalCreditElement) {
totalCreditElement.textContent = totalCredit.toLocaleString('fr-FR') + ' FCFA';
}
if (balanceElement) {
balanceElement.textContent = balance.toLocaleString('fr-FR') + ' FCFA';
if (Math.abs(balance) < 0.01) {
balanceElement.className = 'font-bold text-success';
} else {
balanceElement.className = 'font-bold text-danger';
}
}
}

function generatePieceNumber() {
const journalSelect = document.getElementById('entryJournal');
const journalCode = journalSelect ? journalSelect.value : 'JC';
const companyId = app.currentCompany || '001';

const pieceNumber = generateJournalNumber(journalCode, companyId);
const entryPiece = document.getElementById('entryPiece');
if (entryPiece) {
entryPiece.value = pieceNumber;
}
}

function saveEntry() {
// Vérifier l'équilibre
const debitInputs = document.querySelectorAll('.debit-input');
const creditInputs = document.querySelectorAll('.credit-input');

let totalDebit = 0;
let totalCredit = 0;

debitInputs.forEach(input => {
totalDebit += parseFloat(input.value) || 0;
});

creditInputs.forEach(input => {
totalCredit += parseFloat(input.value) || 0;
});

if (Math.abs(totalDebit - totalCredit) > 0.01) {
alert('❌ L\'écriture n\'est pas équilibrée. Le total des débits doit être égal au total des crédits.');
return;
}

if (totalDebit === 0 && totalCredit === 0) {
alert('❌ L\'écriture ne peut pas être vide. Veuillez saisir au moins un montant.');
return;
}

// Construire l'écriture
const entry = {
id: app.entries.length + 1,
date: document.getElementById('entryDate').value,
journal: document.getElementById('entryJournal') ? document.getElementById('entryJournal').value : 'JC',
piece: document.getElementById('entryPiece').value,
libelle: document.getElementById('entryLibelle').value,
companyId: parseInt(app.currentCompany) || 1,
lines: [],
status: app.currentProfile === 'caissier' ? 'En attente' : 'Validé',
userId: app.currentUser.id || 1
};

// Ajouter les lignes
const rows = document.querySelectorAll('#entryLinesBody tr');
rows.forEach(row => {
const accountInput = row.querySelector('.account-input, .account-select');
const libelleInput = row.querySelector('.libelle-input');
const debitInput = row.querySelector('.debit-input');
const creditInput = row.querySelector('.credit-input');

if (accountInput && libelleInput && accountInput.value && libelleInput.value) {
const debitValue = parseFloat(debitInput.value) || 0;
const creditValue = parseFloat(creditInput.value) || 0;

if (debitValue > 0 || creditValue > 0) {
let accountCode = '';
let accountName = '';

if (app.currentProfile === 'caissier') {
accountName = accountInput.value; // Intitulé libre
accountCode = ''; // Pas de code pour le caissier
} else {
accountCode = accountInput.value;
const account = app.accounts.find(acc => acc.code === accountCode);
accountName = account ? account.name : accountCode;
}

entry.lines.push({
account: accountCode,
accountName: accountName,
libelle: libelleInput.value,
debit: debitValue,
credit: creditValue
});
}
}
});

if (entry.lines.length < 2) {
alert('❌ Une écriture doit contenir au moins 2 lignes avec des montants.');
return;
}

// Sauvegarder l'écriture
app.entries.push(entry);

closeModal();
loadEntries(); // Recharger la liste

const message = app.currentProfile === 'caissier' ?
'✅ Opération enregistrée et envoyée pour validation.' :
'✅ Écriture enregistrée avec succès.';

showSuccessMessage(message);
console.log('✅ Écriture sauvegardée:', entry);
}

// =============================================================================
// ACCOUNTS MANAGEMENT - FONCTION COMPLÈTE RESTAURÉE
// =============================================================================

function loadAccounts() {
const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
${app.currentProfile === 'caissier' ? 'Comptes Disponibles' : 'Plan Comptable SYSCOHADA Révisé'}
</h2>
${app.currentProfile !== 'caissier' ? `
<button onclick="openAddAccountModal()" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-plus mr-2"></i>Nouveau Compte
</button>
` : ''}
</div>

<!-- Filtres -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
<input type="text" id="accountSearch" placeholder="Rechercher un compte..." class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" oninput="filterAccounts()">
<select id="categoryFilter" class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" onchange="filterAccounts()">
<option value="">Toutes les catégories</option>
<option value="Capitaux propres">Capitaux propres</option>
<option value="Immobilisations">Immobilisations</option>
<option value="Stocks">Stocks</option>
<option value="Tiers">Tiers</option>
<option value="Financiers">Financiers</option>
<option value="Charges">Charges</option>
<option value="Produits">Produits</option>
<option value="Résultats">Résultats</option>
<option value="Comptabilité analytique">Comptabilité analytique</option>
</select>
<button onclick="resetAccountFilters()" class="bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary/90 transition-colors">
<i class="fas fa-sync mr-2"></i>Réinitialiser
</button>
</div>
</div>

<!-- Plan comptable par classes -->
<div class="grid grid-cols-1 gap-6" id="accountsContainer">
${generateAccountsByClass()}
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;
}

function openAddAccountModal() {
const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" onclick="closeModalOnBackground(event)">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-md mx-4" onclick="event.stopPropagation()">
<h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">
<i class="fas fa-plus mr-2 text-primary"></i>Nouveau Compte
</h3>

<form id="addAccountForm" class="space-y-4">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Code du compte</label>
<input type="text" id="accountCode" required pattern="[0-9]{6}" maxlength="6" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" placeholder="Ex: 512001">
<p class="text-xs text-gray-500 dark:text-gray-400 mt-1">6 chiffres selon SYSCOHADA</p>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Intitulé du compte</label>
<input type="text" id="accountName" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" placeholder="Ex: Banque SGBCI">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Catégorie</label>
<select id="accountCategory" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option value="">-- Sélectionner une catégorie --</option>
<option value="Capitaux propres">Capitaux propres</option>
<option value="Immobilisations corporelles">Immobilisations corporelles</option>
<option value="Immobilisations incorporelles">Immobilisations incorporelles</option>
<option value="Stocks">Stocks</option>
<option value="Clients">Clients</option>
<option value="Fournisseurs">Fournisseurs</option>
<option value="Personnel">Personnel</option>
<option value="Organismes sociaux">Organismes sociaux</option>
<option value="État">État</option>
<option value="Comptes bancaires">Comptes bancaires</option>
<option value="Caisse">Caisse</option>
<option value="Achats">Achats</option>
<option value="Services extérieurs">Services extérieurs</option>
<option value="Charges de personnel">Charges de personnel</option>
<option value="Impôts et taxes">Impôts et taxes</option>
<option value="Ventes">Ventes</option>
<option value="Produits financiers">Produits financiers</option>
<option value="Résultats">Résultats</option>
<option value="Comptabilité analytique">Comptabilité analytique</option>
</select>
</div>

<div class="flex justify-end space-x-4 pt-4">
<button type="button" onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors">
Annuler
</button>
<button type="submit" class="bg-primary hover:bg-primary/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-save mr-2"></i>Créer
</button>
</div>
</form>
</div>
</div>
`;

document.getElementById('modalContainer').innerHTML = modal;

setTimeout(() => {
const addAccountForm = document.getElementById('addAccountForm');
if (addAccountForm) {
addAccountForm.addEventListener('submit', function(e) {
e.preventDefault();
handleAddAccount();
});
}
}, 100);
}

function handleAddAccount() {
const code = document.getElementById('accountCode').value;
const name = document.getElementById('accountName').value;
const category = document.getElementById('accountCategory').value;

// Vérifier si le code existe déjà
if (app.accounts.find(acc => acc.code === code)) {
alert('❌ Ce code de compte existe déjà.');
return;
}

const newAccount = {
code: code,
name: name,
category: category
};

app.accounts.push(newAccount);
app.accounts.sort((a, b) => a.code.localeCompare(b.code)); // Trier par code

closeModal();
loadAccounts();
showSuccessMessage('✅ Compte créé avec succès !');
console.log('✅ Nouveau compte créé:', newAccount);
}

function filterAccounts() {
const searchInput = document.getElementById('accountSearch');
const categorySelect = document.getElementById('categoryFilter');
const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';
const categoryFilter = categorySelect ? categorySelect.value : '';

const filteredAccounts = app.accounts.filter(account => {
const matchesSearch = account.code.toLowerCase().includes(searchTerm) ||
account.name.toLowerCase().includes(searchTerm);
const matchesCategory = !categoryFilter || account.category === categoryFilter;

return matchesSearch && matchesCategory;
});

// Regrouper par classe
const accountsByClass = {
1: { name: 'Classe 1 - Comptes de ressources durables', accounts: [] },
2: { name: 'Classe 2 - Comptes d\'actif immobilisé', accounts: [] },
3: { name: 'Classe 3 - Comptes de stocks', accounts: [] },
4: { name: 'Classe 4 - Comptes de tiers', accounts: [] },
5: { name: 'Classe 5 - Comptes financiers', accounts: [] },
6: { name: 'Classe 6 - Comptes de charges', accounts: [] },
7: { name: 'Classe 7 - Comptes de produits', accounts: [] },
8: { name: 'Classe 8 - Comptes de résultats', accounts: [] },
9: { name: 'Classe 9 - Comptes analytiques', accounts: [] }
};

filteredAccounts.forEach(account => {
const classNumber = parseInt(account.code.charAt(0));
if (accountsByClass[classNumber]) {
accountsByClass[classNumber].accounts.push(account);
}
});

let html = '';
Object.values(accountsByClass).forEach(classData => {
if (classData.accounts.length > 0) {
html += generateAccountClassHTML(classData);
}
});

const accountsContainer = document.getElementById('accountsContainer');
if (accountsContainer) {
accountsContainer.innerHTML = html;
}
}

function resetAccountFilters() {
const searchInput = document.getElementById('accountSearch');
const categorySelect = document.getElementById('categoryFilter');
const accountsContainer = document.getElementById('accountsContainer');

if (searchInput) searchInput.value = '';
if (categorySelect) categorySelect.value = '';
if (accountsContainer) accountsContainer.innerHTML = generateAccountsByClass();
}

// =============================================================================
// CAISSE MANAGEMENT - FONCTION COMPLÈTE RESTAURÉE
// =============================================================================

function loadCaisse() {
if ((app.currentProfile === 'admin' || app.currentProfile.includes('collaborateur')) && !app.currentCompany) {
showCompanySelectionWarning('gestion des caisses');
return;
}

const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
${app.currentProfile === 'caissier' ? 'Ma Caisse' : 'Gestion des Caisses'}
</h2>
<div class="flex items-center space-x-4">
<div class="text-sm font-medium text-primary-light bg-primary/10 px-3 py-1 rounded-lg">
<i class="fas fa-building mr-2"></i><span>${getCompanyName()}</span>
</div>
${app.currentProfile !== 'caissier' ? `
<button onclick="openAddCashRegisterModal()" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-plus mr-2"></i>Nouvelle Caisse
</button>
` : ''}
</div>
</div>

${app.currentProfile === 'caissier' ? `
<!-- Interface Caissier -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
<i class="fas fa-cash-register mr-2 text-primary"></i>État de ma Caisse
</h3>
<div class="space-y-4">
<div class="flex justify-between items-center p-4 bg-success/10 rounded-lg">
<span class="text-success font-medium">Solde d'ouverture</span>
<span class="text-2xl font-bold text-success">150,000 FCFA</span>
</div>
<div class="flex justify-between items-center p-4 bg-info/10 rounded-lg">
<span class="text-info font-medium">Recettes du jour</span>
<span class="text-2xl font-bold text-info">+85,000 FCFA</span>
</div>
<div class="flex justify-between items-center p-4 bg-warning/10 rounded-lg">
<span class="text-warning font-medium">Dépenses du jour</span>
<span class="text-2xl font-bold text-warning">-25,000 FCFA</span>
</div>
<div class="flex justify-between items-center p-4 bg-primary/10 rounded-lg border-t-2 border-primary">
<span class="text-primary font-medium">Solde actuel</span>
<span class="text-3xl font-bold text-primary">210,000 FCFA</span>
</div>
</div>

<div class="mt-6 grid grid-cols-2 gap-4">
<button onclick="navigateTo('entries')" class="bg-success hover:bg-success/90 text-white px-4 py-3 rounded-lg font-medium transition-colors">
<i class="fas fa-plus-circle mr-2"></i>Nouvelle opération
</button>
<button onclick="generateCashReport()" class="bg-info hover:bg-info/90 text-white px-4 py-3 rounded-lg font-medium transition-colors">
<i class="fas fa-print mr-2"></i>État de caisse
</button>
</div>
</div>

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
<i class="fas fa-history mr-2 text-info"></i>Dernières Opérations
</h3>
<div class="space-y-3">
${generateCashierOperations()}
</div>
</div>
</div>
` : `
<!-- Interface Admin/Collaborateur -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">
<div class="p-6 border-b border-gray-200 dark:border-gray-700">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white">Liste des Caisses</h3>
</div>
<div class="overflow-x-auto">
<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
<thead class="bg-gray-50 dark:bg-gray-700">
<tr>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Nom de la Caisse</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Responsable</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Solde</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Statut</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
</tr>
</thead>
<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
${generateCashRegistersRows()}
</tbody>
</table>
</div>
</div>
`}
</div>
`;
document.getElementById('mainContent').innerHTML = content;
}

function openAddCashRegisterModal() {
const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" onclick="closeModalOnBackground(event)">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-md mx-4" onclick="event.stopPropagation()">
<h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">
<i class="fas fa-cash-register mr-2 text-primary"></i>Nouvelle Caisse
</h3>

<form id="addCashRegisterForm" class="space-y-4">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Nom de la caisse</label>
<input type="text" id="cashRegisterName" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" placeholder="Ex: Caisse Ventes">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Responsable</label>
<select id="cashRegisterResponsible" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option value="">-- Non assigné --</option>
${app.users.filter(u => u.profile === 'caissier').map(user => `
<option value="${user.id}">${user.name}</option>
`).join('')}
</select>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Solde d'ouverture (FCFA)</label>
<input type="number" id="cashRegisterBalance" min="0" step="0.01" value="0" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>

<div class="flex justify-end space-x-4 pt-4">
<button type="button" onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors">
Annuler
</button>
<button type="submit" class="bg-primary hover:bg-primary/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-save mr-2"></i>Créer
</button>
</div>
</form>
</div>
</div>
`;

document.getElementById('modalContainer').innerHTML = modal;

setTimeout(() => {
const addCashRegisterForm = document.getElementById('addCashRegisterForm');
if (addCashRegisterForm) {
addCashRegisterForm.addEventListener('submit', function(e) {
e.preventDefault();
handleAddCashRegister();
});
}
}, 100);
}

function handleAddCashRegister() {
const name = document.getElementById('cashRegisterName').value;
const responsibleId = document.getElementById('cashRegisterResponsible').value;
const balance = parseFloat(document.getElementById('cashRegisterBalance').value);

const responsible = responsibleId ? app.users.find(u => u.id == responsibleId) : null;

// Simuler l'ajout de la caisse
closeModal();
loadCaisse();
showSuccessMessage(`✅ Caisse "${name}" créée avec succès !`);
console.log('✅ Nouvelle caisse créée:', { name, responsible: responsible?.name, balance });
}

// =============================================================================
// REPORTS MANAGEMENT - FONCTION COMPLÈTE RESTAURÉE
// =============================================================================

function loadReports() {
if ((app.currentProfile === 'admin' || app.currentProfile.includes('collaborateur')) && !app.currentCompany) {
showCompanySelectionWarning('rapports et états financiers');
return;
}

const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
${app.currentProfile === 'caissier' ? 'État de Caisse' : 'Rapports & États Financiers'}
</h2>
<div class="text-sm font-medium text-primary-light bg-primary/10 px-3 py-1 rounded-lg">
<i class="fas fa-building mr-2"></i><span>${getCompanyName()}</span>
</div>
</div>

<!-- Sélection de période -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Sélection de période</h3>
<div class="grid grid-cols-1 md:grid-cols-5 gap-4">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Du</label>
<input type="date" id="reportDateFrom" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" value="${new Date(new Date().getFullYear(), 0, 1).toISOString().split('T')[0]}">
</div>
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Au</label>
<input type="date" id="reportDateTo" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" value="${new Date().toISOString().split('T')[0]}">
</div>
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Format</label>
<select id="reportFormat" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option value="pdf">PDF</option>
<option value="excel">Excel</option>
<option value="preview">Aperçu</option>
</select>
</div>
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Journal</label>
<select id="reportJournal" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option value="">Tous</option>
<option value="JG">Journal Général</option>
<option value="JA">Journal des Achats</option>
<option value="JV">Journal des Ventes</option>
<option value="JB">Journal de Banque</option>
<option value="JC">Journal de Caisse</option>
<option value="JOD">Journal des Op. Diverses</option>
</select>
</div>
<div class="flex items-end">
<button onclick="updateReportPreview()" class="w-full bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-sync mr-2"></i>Actualiser
</button>
</div>
</div>
</div>

<!-- États financiers SYSCOHADA -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
<!-- Livres obligatoires -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
<i class="fas fa-book mr-2 text-primary"></i>Livres Obligatoires
</h3>
<div class="space-y-3">
<button onclick="previewReport('journal')" class="w-full text-left p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="flex items-center justify-between">
<div>
<div class="font-medium text-gray-900 dark:text-white">Journal Général</div>
<div class="text-sm text-gray-500 dark:text-gray-400">Chronologique des écritures</div>
</div>
<div class="flex space-x-2">
<i class="fas fa-eye text-info"></i>
<i class="fas fa-download text-primary"></i>
</div>
</div>
</button>

<button onclick="previewReport('grandlivre')" class="w-full text-left p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="flex items-center justify-between">
<div>
<div class="font-medium text-gray-900 dark:text-white">Grand Livre</div>
<div class="text-sm text-gray-500 dark:text-gray-400">Par compte</div>
</div>
<div class="flex space-x-2">
<i class="fas fa-eye text-info"></i>
<i class="fas fa-download text-primary"></i>
</div>
</div>
</button>

<button onclick="previewReport('balance')" class="w-full text-left p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="flex items-center justify-between">
<div>
<div class="font-medium text-gray-900 dark:text-white">Balance Générale</div>
<div class="text-sm text-gray-500 dark:text-gray-400">Tous les comptes</div>
</div>
<div class="flex space-x-2">
<i class="fas fa-eye text-info"></i>
<i class="fas fa-download text-primary"></i>
</div>
</div>
</button>
</div>
</div>

<!-- États financiers -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
<i class="fas fa-chart-bar mr-2 text-success"></i>États Financiers
</h3>
<div class="space-y-3">
<button onclick="previewReport('bilan')" class="w-full text-left p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="flex items-center justify-between">
<div>
<div class="font-medium text-gray-900 dark:text-white">Bilan SYSCOHADA</div>
<div class="text-sm text-gray-500 dark:text-gray-400">Actif / Passif</div>
</div>
<div class="flex space-x-2">
<i class="fas fa-eye text-info"></i>
<i class="fas fa-download text-success"></i>
</div>
</div>
</button>

<button onclick="previewReport('resultat')" class="w-full text-left p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="flex items-center justify-between">
<div>
<div class="font-medium text-gray-900 dark:text-white">Compte de Résultat</div>
<div class="text-sm text-gray-500 dark:text-gray-400">Charges / Produits</div>
</div>
<div class="flex space-x-2">
<i class="fas fa-eye text-info"></i>
<i class="fas fa-download text-success"></i>
</div>
</div>
</button>

<button onclick="previewReport('tafire')" class="w-full text-left p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="flex items-center justify-between">
<div>
<div class="font-medium text-gray-900 dark:text-white">TAFIRE</div>
<div class="text-sm text-gray-500 dark:text-gray-400">Tableau de flux</div>
</div>
<div class="flex space-x-2">
<i class="fas fa-eye text-info"></i>
<i class="fas fa-download text-success"></i>
</div>
</div>
</button>
</div>
</div>
</div>

${app.currentProfile === 'caissier' ? `
<!-- États de caisse spécifiques -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
<i class="fas fa-cash-register mr-2 text-warning"></i>États de Caisse
</h3>
<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
<button onclick="generateCashReport('daily')" class="p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="text-center">
<i class="fas fa-file-alt text-2xl text-warning mb-2"></i>
<div class="font-medium text-gray-900 dark:text-white">État journalier</div>
</div>
</button>

<button onclick="generateCashReport('weekly')" class="p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="text-center">
<i class="fas fa-calendar-week text-2xl text-info mb-2"></i>
<div class="font-medium text-gray-900 dark:text-white">Rapport hebdomadaire</div>
</div>
</button>

<button onclick="generateCashReport('monthly')" class="p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
<div class="text-center">
<i class="fas fa-calendar-alt text-2xl text-primary mb-2"></i>
<div class="font-medium text-gray-900 dark:text-white">Rapport mensuel</div>
</div>
</button>
</div>
</div>
` : ''}
</div>
`;
document.getElementById('mainContent').innerHTML = content;
}

// FONCTION POUR PRÉVISUALISER LES RAPPORTS
function previewReport(type) {
const reportNames = {
'journal': 'Journal Général',
'grandlivre': 'Grand Livre',
'balance': 'Balance Générale',
'bilan': 'Bilan SYSCOHADA',
'resultat': 'Compte de Résultat',
'tafire': 'TAFIRE'
};

const reportContent = generateReportPreview(type);

const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" onclick="closeModalOnBackground(event)">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-6xl mx-4 max-h-[90vh] overflow-hidden" onclick="event.stopPropagation()">
<div class="flex justify-between items-center mb-6">
<h3 class="text-xl font-bold text-gray-900 dark:text-white">
<i class="fas fa-eye mr-2 text-info"></i>Aperçu - ${reportNames[type]}
</h3>
<div class="flex items-center space-x-4">
<button onclick="downloadReport('${type}')" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-download mr-2"></i>Télécharger
</button>
<button onclick="closeModal()" class="text-gray-500 hover:text-gray-700">
<i class="fas fa-times text-xl"></i>
</button>
</div>
</div>

<div class="overflow-y-auto max-h-[calc(90vh-200px)] bg-gray-50 dark:bg-gray-900 p-4 rounded-lg">
${reportContent}
</div>

<div class="mt-6 flex justify-end space-x-4">
<button onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors">
Fermer
</button>
<button onclick="downloadReport('${type}')" class="bg-primary hover:bg-primary/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-download mr-2"></i>Télécharger ${reportNames[type]}
</button>
</div>
</div>
</div>
`;

document.getElementById('modalContainer').innerHTML = modal;
}

function generateReportPreview(type) {
const company = app.companies.find(c => c.id == app.currentCompany);
const companyName = company ? company.name : 'Entreprise non sélectionnée';
const dateFrom = document.getElementById('reportDateFrom')?.value || '2024-01-01';
const dateTo = document.getElementById('reportDateTo')?.value || '2024-12-31';

switch(type) {
case 'journal':
return `
<div class="bg-white dark:bg-gray-800 p-6 rounded-lg">
<div class="text-center mb-6">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">${companyName}</h2>
<h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300">JOURNAL GÉNÉRAL</h3>
<p class="text-sm text-gray-600 dark:text-gray-400">Période du ${new Date(dateFrom).toLocaleDateString('fr-FR')} au ${new Date(dateTo).toLocaleDateString('fr-FR')}</p>
</div>
<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
<thead class="bg-gray-50 dark:bg-gray-700">
<tr>
<th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Date</th>
<th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">N° Pièce</th>
<th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Compte</th>
<th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Libellé</th>
<th class="px-4 py-2 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Débit</th>
<th class="px-4 py-2 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Crédit</th>
</tr>
</thead>
<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
${app.entries.filter(e => e.companyId == app.currentCompany).map(entry =>
entry.lines.map(line => `
<tr>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white">${new Date(entry.date).toLocaleDateString('fr-FR')}</td>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white font-mono">${entry.piece}</td>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white font-mono">${line.account}</td>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white">${line.libelle}</td>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white text-right font-mono">${line.debit ? line.debit.toLocaleString('fr-FR') + ' F' : ''}</td>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white text-right font-mono">${line.credit ? line.credit.toLocaleString('fr-FR') + ' F' : ''}</td>
</tr>
`).join('')
).join('')}
</tbody>
</table>
</div>
`;

case 'balance':
return `
<div class="bg-white dark:bg-gray-800 p-6 rounded-lg">
<div class="text-center mb-6">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">${companyName}</h2>
<h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300">BALANCE GÉNÉRALE</h3>
<p class="text-sm text-gray-600 dark:text-gray-400">Au ${new Date(dateTo).toLocaleDateString('fr-FR')}</p>
</div>
<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
<thead class="bg-gray-50 dark:bg-gray-700">
<tr>
<th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Compte</th>
<th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Intitulé</th>
<th class="px-4 py-2 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Débit</th>
<th class="px-4 py-2 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Crédit</th>
<th class="px-4 py-2 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase">Solde</th>
</tr>
</thead>
<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
${app.accounts.slice(0, 10).map(account => {
const movements = app.entries.filter(e => e.companyId == app.currentCompany)
.flatMap(e => e.lines)
.filter(l => l.account === account.code);
const totalDebit = movements.reduce((sum, m) => sum + (m.debit || 0), 0);
const totalCredit = movements.reduce((sum, m) => sum + (m.credit || 0), 0);
const solde = totalDebit - totalCredit;
return `
<tr>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white font-mono">${account.code}</td>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white">${account.name}</td>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white text-right font-mono">${totalDebit.toLocaleString('fr-FR')} F</td>
<td class="px-4 py-2 text-sm text-gray-900 dark:text-white text-right font-mono">${totalCredit.toLocaleString('fr-FR')} F</td>
<td class="px-4 py-2 text-sm font-mono text-right ${solde >= 0 ? 'text-success' : 'text-danger'}">${Math.abs(solde).toLocaleString('fr-FR')} F ${solde >= 0 ? 'D' : 'C'}</td>
</tr>
`;
}).join('')}
</tbody>
</table>
</div>
`;

case 'bilan':
return `
<div class="bg-white dark:bg-gray-800 p-6 rounded-lg">
<div class="text-center mb-6">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">${companyName}</h2>
<h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300">BILAN SYSCOHADA</h3>
<p class="text-sm text-gray-600 dark:text-gray-400">Au ${new Date(dateTo).toLocaleDateString('fr-FR')}</p>
</div>
<div class="grid grid-cols-2 gap-8">
<div>
<h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center bg-primary text-white p-2 rounded">ACTIF</h4>
<table class="w-full text-sm">
<tr class="border-b">
<td class="py-2 font-medium">Actif immobilisé</td>
<td class="py-2 text-right font-mono">2,500,000 F</td>
</tr>
<tr class="border-b">
<td class="py-2 font-medium">Stocks</td>
<td class="py-2 text-right font-mono">1,200,000 F</td>
</tr>
<tr class="border-b">
<td class="py-2 font-medium">Créances</td>
<td class="py-2 text-right font-mono">800,000 F</td>
</tr>
<tr class="border-b">
<td class="py-2 font-medium">Trésorerie actif</td>
<td class="py-2 text-right font-mono">300,000 F</td>
</tr>
<tr class="border-t-2 border-primary">
<td class="py-2 font-bold">TOTAL ACTIF</td>
<td class="py-2 text-right font-mono font-bold">4,800,000 F</td>
</tr>
</table>
</div>
<div>
<h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center bg-primary text-white p-2 rounded">PASSIF</h4>
<table class="w-full text-sm">
<tr class="border-b">
<td class="py-2 font-medium">Capitaux propres</td>
<td class="py-2 text-right font-mono">3,200,000 F</td>
</tr>
<tr class="border-b">
<td class="py-2 font-medium">Dettes financières</td>
<td class="py-2 text-right font-mono">1,000,000 F</td>
</tr>
<tr class="border-b">
<td class="py-2 font-medium">Dettes fournisseurs</td>
<td class="py-2 text-right font-mono">400,000 F</td>
</tr>
<tr class="border-b">
<td class="py-2 font-medium">Autres dettes</td>
<td class="py-2 text-right font-mono">200,000 F</td>
</tr>
<tr class="border-t-2 border-primary">
<td class="py-2 font-bold">TOTAL PASSIF</td>
<td class="py-2 text-right font-mono font-bold">4,800,000 F</td>
</tr>
</table>
</div>
</div>
</div>
`;

default:
return `
<div class="bg-white dark:bg-gray-800 p-6 rounded-lg text-center">
<div class="mb-6">
<i class="fas fa-file-alt text-6xl text-gray-400 mb-4"></i>
<h3 class="text-lg font-semibold text-gray-900 dark:text-white">${type.toUpperCase()}</h3>
<p class="text-gray-600 dark:text-gray-400">Aperçu du rapport en cours de génération...</p>
</div>
<div class="bg-gray-50 dark:bg-gray-700 p-4 rounded-lg">
<p class="text-sm text-gray-600 dark:text-gray-400">
Le rapport sera généré avec les données de la période sélectionnée.
<br>Cliquez sur "Télécharger" pour obtenir le rapport complet.
</p>
</div>
</div>
`;
}
}

function downloadReport(type) {
const reportNames = {
'journal': 'Journal Général',
'grandlivre': 'Grand Livre',
'balance': 'Balance Générale',
'bilan': 'Bilan SYSCOHADA',
'resultat': 'Compte de Résultat',
'tafire': 'TAFIRE'
};

const dateFromElement = document.getElementById('reportDateFrom');
const dateToElement = document.getElementById('reportDateTo');
const formatElement = document.getElementById('reportFormat');

const dateFrom = dateFromElement ? dateFromElement.value : '';
const dateTo = dateToElement ? dateToElement.value : '';
const format = formatElement ? formatElement.value : 'PDF';

showSuccessMessage(`📊 Téléchargement du rapport "${reportNames[type]}" en cours...\n\nPériode: ${dateFrom ? new Date(dateFrom).toLocaleDateString('fr-FR') : 'N/A'} - ${dateTo ? new Date(dateTo).toLocaleDateString('fr-FR') : 'N/A'}\nFormat: ${format.toUpperCase()}\nEntreprise: ${getCompanyName()}`);

console.log('✅ Rapport téléchargé:', {
type: reportNames[type],
dateFrom,
dateTo,
format,
company: getCompanyName()
});
}

function updateReportPreview() {
const dateFromElement = document.getElementById('reportDateFrom');
const dateToElement = document.getElementById('reportDateTo');
const formatElement = document.getElementById('reportFormat');
const journalElement = document.getElementById('reportJournal');

const dateFrom = dateFromElement ? dateFromElement.value : '';
const dateTo = dateToElement ? dateToElement.value : '';
const format = formatElement ? formatElement.value : '';
const journal = journalElement ? journalElement.value : '';

showSuccessMessage(`📊 Aperçu mis à jour pour la période du ${dateFrom ? new Date(dateFrom).toLocaleDateString('fr-FR') : 'N/A'} au ${dateTo ? new Date(dateTo).toLocaleDateString('fr-FR') : 'N/A'}`);
}

function generateCashReport(period = 'daily') {
const periods = {
'daily': 'État journalier',
'weekly': 'Rapport hebdomadaire',
'monthly': 'Rapport mensuel'
};

showSuccessMessage(`📊 Génération de l'${periods[period]} de caisse en cours...\n\nRapport PDF prêt pour téléchargement.`);
console.log('✅ Rapport de caisse généré:', period);
}

// =============================================================================
// IMPORT MANAGEMENT - FONCTION COMPLÈTE RESTAURÉE
// =============================================================================

function loadImport() {
if ((app.currentProfile === 'admin' || app.currentProfile.includes('collaborateur')) && !app.currentCompany) {
showCompanySelectionWarning('import de balances');
return;
}

const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">Import de Balances</h2>
<div class="text-sm font-medium text-primary-light bg-primary/10 px-3 py-1 rounded-lg">
<i class="fas fa-building mr-2"></i><span>${getCompanyName()}</span>
</div>
</div>

<!-- Guide d'import -->
<div class="bg-info/10 border border-info/20 rounded-xl p-6">
<h3 class="text-lg font-semibold text-info mb-4">
<i class="fas fa-info-circle mr-2"></i>Guide d'import
</h3>
<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
<div>
<h4 class="font-medium text-gray-900 dark:text-white mb-2">Format de fichier accepté</h4>
<ul class="text-sm text-gray-600 dark:text-gray-400 space-y-1">
<li>• Excel (.xlsx, .xls)</li>
<li>• CSV (séparateur virgule ou point-virgule)</li>
<li>• Taille maximum : 10 MB</li>
</ul>
</div>
<div>
<h4 class="font-medium text-gray-900 dark:text-white mb-2">Colonnes requises</h4>
<ul class="text-sm text-gray-600 dark:text-gray-400 space-y-1">
<li>• Code compte (obligatoire)</li>
<li>• Libellé compte (obligatoire)</li>
<li>• Solde débit</li>
<li>• Solde crédit</li>
</ul>
</div>
</div>
<div class="mt-4">
<button onclick="downloadExcelTemplate()" class="bg-info hover:bg-info/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-download mr-2"></i>Télécharger le modèle Excel
</button>
</div>
</div>

<!-- Zone d'import -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
<i class="fas fa-upload mr-2 text-primary"></i>Importer un fichier
</h3>

<div class="border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-8 text-center" id="dropZone">
<input type="file" id="importFile" accept=".xlsx,.xls,.csv" class="hidden" onchange="handleFileSelect(event)">
<div onclick="document.getElementById('importFile').click()" class="cursor-pointer">
<i class="fas fa-cloud-upload-alt text-4xl text-gray-400 mb-4"></i>
<p class="text-lg font-medium text-gray-900 dark:text-white mb-2">Glissez votre fichier ici ou cliquez pour sélectionner</p>
<p class="text-sm text-gray-500 dark:text-gray-400">Formats supportés: Excel, CSV (max 10 MB)</p>
</div>
</div>

<div id="fileInfo" class="mt-4 hidden">
<div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
<div class="flex items-center justify-between">
<div class="flex items-center space-x-3">
<i class="fas fa-file-excel text-success text-xl"></i>
<div>
<div class="font-medium text-gray-900 dark:text-white" id="fileName"></div>
<div class="text-sm text-gray-500 dark:text-gray-400" id="fileSize"></div>
</div>
</div>
<button onclick="startImport()" class="bg-success hover:bg-success/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-check mr-2"></i>Importer
</button>
</div>
</div>
</div>
</div>

<!-- Historique des imports -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">
<div class="p-6 border-b border-gray-200 dark:border-gray-700">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white">Historique des imports</h3>
</div>
<div class="overflow-x-auto">
<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
<thead class="bg-gray-50 dark:bg-gray-700">
<tr>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Date</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Fichier</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Lignes traitées</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Statut</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
</tr>
</thead>
<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
${generateImportHistory()}
</tbody>
</table>
</div>
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;

// Setup drag and drop
setTimeout(() => setupDragAndDrop(), 100);
}

function downloadExcelTemplate() {
// Créer un contenu CSV pour le template
const csvContent = [
'Code Compte,Libellé Compte,Solde Débit,Solde Crédit',
'101000,Capital social,0,1000000',
'411000,Clients,500000,0',
'401000,Fournisseurs,0,300000',
'512000,Banques,200000,0',
'571000,Caisse,50000,0',
'601000,Achats de marchandises,800000,0',
'701000,Ventes de marchandises,0,1200000'
].join('\n');

// Créer et télécharger le fichier
const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
const link = document.createElement('a');
const url = URL.createObjectURL(blob);
link.setAttribute('href', url);
link.setAttribute('download', 'modele_import_balance.csv');
link.style.visibility = 'hidden';
document.body.appendChild(link);
link.click();
document.body.removeChild(link);

showSuccessMessage('📄 Modèle Excel téléchargé avec succès !\n\nLe fichier "modele_import_balance.csv" contient la structure à respecter pour l\'import de vos données comptables.');
console.log('✅ Template Excel téléchargé');
}

function setupDragAndDrop() {
const dropZone = document.getElementById('dropZone');
if (!dropZone) return;

['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
dropZone.addEventListener(eventName, preventDefaults, false);
});

function preventDefaults(e) {
e.preventDefault();
e.stopPropagation();
}

['dragenter', 'dragover'].forEach(eventName => {
dropZone.addEventListener(eventName, highlight, false);
});

['dragleave', 'drop'].forEach(eventName => {
dropZone.addEventListener(eventName, unhighlight, false);
});

function highlight() {
dropZone.classList.add('border-primary', 'bg-primary/5');
}

function unhighlight() {
dropZone.classList.remove('border-primary', 'bg-primary/5');
}

dropZone.addEventListener('drop', handleDrop, false);

function handleDrop(e) {
const dt = e.dataTransfer;
const files = dt.files;

if (files.length > 0) {
const importFile = document.getElementById('importFile');
if (importFile) {
importFile.files = files;
handleFileSelect({ target: { files: files } });
}
}
}
}

function handleFileSelect(event) {
const file = event.target.files[0];
if (file) {
// Vérifier la taille du fichier
if (file.size > 10 * 1024 * 1024) {
alert('❌ Le fichier est trop volumineux. Taille maximum: 10 MB');
return;
}

// Vérifier le format
const allowedTypes = ['.xlsx', '.xls', '.csv'];
const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
if (!allowedTypes.includes(fileExtension)) {
alert('❌ Format de fichier non supporté. Utilisez Excel (.xlsx, .xls) ou CSV.');
return;
}

const fileNameElement = document.getElementById('fileName');
const fileSizeElement = document.getElementById('fileSize');
const fileInfoElement = document.getElementById('fileInfo');

if (fileNameElement) fileNameElement.textContent = file.name;
if (fileSizeElement) fileSizeElement.textContent = (file.size / 1024 / 1024).toFixed(2) + ' MB';
if (fileInfoElement) fileInfoElement.classList.remove('hidden');
}
}

function startImport() {
const fileNameElement = document.getElementById('fileName');
const fileName = fileNameElement ? fileNameElement.textContent : 'Fichier inconnu';
const fileInfoElement = document.getElementById('fileInfo');
const importFileElement = document.getElementById('importFile');

// Simulation du processus d'import
showProcessingMessage('📊 Import en cours...\n\nLes données sont en cours de traitement.');

// Simuler le traitement avec un délai
setTimeout(() => {
if (fileInfoElement) fileInfoElement.classList.add('hidden');
if (importFileElement) importFileElement.value = '';

showSuccessMessage(`✅ Import terminé avec succès !\n\nFichier: ${fileName}\nLignes traitées: 156\nComptes ajoutés: 23\nComptes mis à jour: 133`);

// Rafraîchir l'historique
setTimeout(() => {
const tbody = document.querySelector('#mainContent tbody');
if (tbody) {
tbody.innerHTML = generateImportHistory();
}
}, 500);

console.log('✅ Import terminé:', fileName);
}, 2000);
}

function generateImportHistory() {
const imports = [
{ date: '15/12/2024 10:30', file: 'balance_novembre_2024.xlsx', lines: '245', status: 'Réussi' },
{ date: '01/12/2024 14:15', file: 'comptes_clients.csv', lines: '156', status: 'Réussi' },
{ date: '28/11/2024 09:45', file: 'balance_octobre.xlsx', lines: '12', status: 'Erreur' },
{ date: '15/11/2024 16:20', file: 'export_comptable.xlsx', lines: '178', status: 'Réussi' }
];

return imports.map(imp => `
<tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
<td class="px-6 py-4 text-gray-900 dark:text-white">${imp.date}</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${imp.file}</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${imp.lines}</td>
<td class="px-6 py-4">
<span class="px-2 py-1 rounded text-sm ${imp.status === 'Réussi' ? 'bg-success/20 text-success' : 'bg-danger/20 text-danger'}">${imp.status}</span>
</td>
<td class="px-6 py-4">
<div class="flex space-x-2">
<button onclick="viewImportDetails('${imp.file}')" class="text-primary hover:text-primary/80" title="Voir détails">
<i class="fas fa-eye"></i>
</button>
<button onclick="downloadImportLog('${imp.file}')" class="text-info hover:text-info/80" title="Télécharger log">
<i class="fas fa-download"></i>
</button>
</div>
</td>
</tr>
`).join('');
}

function viewImportDetails(fileName) {
showSuccessMessage(`📋 Détails de l'import: ${fileName}\n\nConsultation des logs et statistiques...`);
}

function downloadImportLog(fileName) {
showSuccessMessage(`📄 Téléchargement du log: ${fileName}\n\nFichier de log téléchargé.`);
}

// =============================================================================
// SETTINGS MANAGEMENT - FONCTION COMPLÈTE RESTAURÉE
// =============================================================================

function loadSettings() {
const content = `
<div class="space-y-6">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">Mon Profil</h2>

<!-- Informations utilisateur -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<div class="flex items-center space-x-6 mb-6">
<div class="w-20 h-20 bg-primary text-white rounded-full flex items-center justify-center text-2xl font-bold">
${app.currentUser.name.split(' ').map(n => n[0]).join('')}
</div>
<div>
<h3 class="text-xl font-semibold text-gray-900 dark:text-white">${app.currentUser.name}</h3>
<p class="text-gray-600 dark:text-gray-400">${app.currentUser.email}</p>
<span class="inline-block mt-2 px-3 py-1 rounded-full text-sm ${getProfileColor(app.currentUser.role)}">${app.currentUser.role}</span>
</div>
</div>

<form id="profileForm" class="grid grid-cols-1 md:grid-cols-2 gap-6">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Nom complet</label>
<input type="text" id="profileName" value="${app.currentUser.name}" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email</label>
<input type="email" id="profileEmail" value="${app.currentUser.email}" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Téléphone</label>
<input type="tel" id="profilePhone" value="+225 07 XX XX XX XX" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Profil</label>
<input type="text" value="${app.currentUser.role}" readonly class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-600 text-gray-900 dark:text-white text-base">
<p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Seul l'administrateur peut modifier votre profil</p>
</div>
</form>

<div class="mt-6 flex justify-between">
<button onclick="saveProfile()" class="bg-primary hover:bg-primary/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-save mr-2"></i>Sauvegarder
</button>
<button onclick="openChangePasswordModal()" class="bg-warning hover:bg-warning/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-key mr-2"></i>Changer mot de passe
</button>
</div>
</div>

${app.currentProfile === 'admin' ? `
<!-- Section Admin: Gestion du logo -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
<i class="fas fa-image mr-2 text-primary"></i>Logo de l'entreprise
</h3>
<div class="flex items-center space-x-4">
<div class="w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center">
${app.companyLogo ?
`<img src="${app.companyLogo}" alt="Logo" class="w-full h-full object-cover rounded-lg">` :
'<i class="fas fa-image text-gray-400 text-2xl"></i>'
}
</div>
<div>
<button onclick="uploadLogo()" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-upload mr-2"></i>Télécharger logo
</button>
<p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Format accepté: JPG, PNG (max 2MB)</p>
</div>
</div>
</div>
` : ''}

<!-- Statistiques personnelles -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Mes Statistiques</h3>
<div class="grid grid-cols-1 md:grid-cols-3 gap-6">
<div class="text-center p-4 bg-primary/10 rounded-lg">
<div class="text-2xl font-bold text-primary">
${app.currentProfile === 'caissier' ? '45' : app.entries.filter(e => e.userId === app.currentUser.id).length}
</div>
<div class="text-sm text-gray-600 dark:text-gray-400">
${app.currentProfile === 'caissier' ? 'Opérations caisse' : 'Écritures'} ce mois
</div>
</div>
<div class="text-center p-4 bg-success/10 rounded-lg">
<div class="text-2xl font-bold text-success">
${app.currentProfile === 'admin' ? app.companies.length :
app.currentProfile.includes('collaborateur') ? '8' : '1'}
</div>
<div class="text-sm text-gray-600 dark:text-gray-400">
${app.currentProfile === 'caissier' ? 'Caisse assignée' : 'Entreprises gérées'}
</div>
</div>
<div class="text-center p-4 bg-info/10 rounded-lg">
<div class="text-2xl font-bold text-info">98%</div>
<div class="text-sm text-gray-600 dark:text-gray-400">Taux de validation</div>
</div>
</div>
</div>

<!-- Session et déconnexion -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Session</h3>
<div class="flex items-center justify-between">
<div>
<p class="text-sm text-gray-600 dark:text-gray-400">Dernière connexion: Aujourd'hui à ${new Date().toLocaleTimeString('fr-FR')}</p>
<p class="text-sm text-gray-600 dark:text-gray-400">Profil: ${app.currentUser.role}</p>
<p class="text-sm text-gray-600 dark:text-gray-400">Navigateur: ${navigator.userAgent.includes('Chrome') ? 'Google Chrome' : 'Autre'}</p>
</div>
<button onclick="confirmLogout()" class="bg-danger hover:bg-danger/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-sign-out-alt mr-2"></i>Se déconnecter
</button>
</div>
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;
}

function saveProfile() {
const nameElement = document.getElementById('profileName');
const emailElement = document.getElementById('profileEmail');
const phoneElement = document.getElementById('profilePhone');

const name = nameElement ? nameElement.value : app.currentUser.name;
const email = emailElement ? emailElement.value : app.currentUser.email;
const phone = phoneElement ? phoneElement.value : '';

// Mise à jour des données utilisateur
app.currentUser.name = name;
app.currentUser.email = email;

// Mettre à jour l'affichage
updateUserInfo();

showSuccessMessage('✅ Profil mis à jour avec succès !');
console.log('✅ Profil sauvegardé:', { name, email, phone });
}

function openChangePasswordModal() {
const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" onclick="closeModalOnBackground(event)">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-md mx-4" onclick="event.stopPropagation()">
<h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">
<i class="fas fa-key mr-2 text-warning"></i>Changer le mot de passe
</h3>

<form id="changePasswordForm" class="space-y-4">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Mot de passe actuel</label>
<input type="password" id="currentPassword" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Nouveau mot de passe</label>
<input type="password" id="newPassword" required minlength="6" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Minimum 6 caractères</p>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Confirmer le nouveau mot de passe</label>
<input type="password" id="confirmPassword" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>

<div class="flex justify-end space-x-4 pt-4">
<button type="button" onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors">
Annuler
</button>
<button type="submit" class="bg-warning hover:bg-warning/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-save mr-2"></i>Modifier
</button>
</div>
</form>
</div>
</div>
`;

document.getElementById('modalContainer').innerHTML = modal;

setTimeout(() => {
const changePasswordForm = document.getElementById('changePasswordForm');
if (changePasswordForm) {
changePasswordForm.addEventListener('submit', function(e) {
e.preventDefault();
handleChangePassword();
});
}
}, 100);
}

function handleChangePassword() {
const currentPasswordElement = document.getElementById('currentPassword');
const newPasswordElement = document.getElementById('newPassword');
const confirmPasswordElement = document.getElementById('confirmPassword');

const currentPassword = currentPasswordElement ? currentPasswordElement.value : '';
const newPassword = newPasswordElement ? newPasswordElement.value : '';
const confirmPassword = confirmPasswordElement ? confirmPasswordElement.value : '';

if (newPassword !== confirmPassword) {
alert('❌ Les nouveaux mots de passe ne correspondent pas.');
return;
}

if (newPassword.length < 6) {
alert('❌ Le nouveau mot de passe doit contenir au moins 6 caractères.');
return;
}

closeModal();
showSuccessMessage('✅ Mot de passe modifié avec succès !');
console.log('✅ Mot de passe changé pour:', app.currentUser.email);
}

// =============================================================================
// USER MANAGEMENT - FONCTION ORIGINALE RESTAURÉE
// =============================================================================

function loadUsersManagement() {
if (app.currentProfile !== 'admin') {
showAccessDenied();
return;
}

const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">Gestion des Collaborateurs</h2>
<button onclick="openAddUserModal()" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-user-plus mr-2"></i>Nouveau Collaborateur
</button>
</div>

<!-- Statistiques utilisateurs -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-6">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
<div class="text-3xl font-bold text-primary">${app.users.filter(u => u.profile.includes('collaborateur')).length}</div>
<div class="text-sm text-gray-600 dark:text-gray-400">Collaborateurs</div>
</div>
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
<div class="text-3xl font-bold text-info">${app.users.filter(u => u.profile === 'user').length}</div>
<div class="text-sm text-gray-600 dark:text-gray-400">Utilisateurs</div>
</div>
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
<div class="text-3xl font-bold text-warning">${app.users.filter(u => u.profile === 'caissier').length}</div>
<div class="text-sm text-gray-600 dark:text-gray-400">Caissiers</div>
</div>
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
<div class="text-3xl font-bold text-success">${app.users.filter(u => u.status === 'Actif').length}</div>
<div class="text-sm text-gray-600 dark:text-gray-400">Actifs</div>
</div>
</div>

<!-- Liste des utilisateurs -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">
<div class="p-6 border-b border-gray-200 dark:border-gray-700">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white">Liste des Collaborateurs</h3>
</div>
<div class="overflow-x-auto">
<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
<thead class="bg-gray-50 dark:bg-gray-700">
<tr>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Utilisateur</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Profil</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Entreprises</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Téléphone</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Statut</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
</tr>
</thead>
<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
${generateUsersRows()}
</tbody>
</table>
</div>
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;
}

function openAddUserModal() {
const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" onclick="closeModalOnBackground(event)">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-lg mx-4" onclick="event.stopPropagation()">
<h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">
<i class="fas fa-user-plus mr-2 text-primary"></i>Nouveau Collaborateur
</h3>

<form id="addUserForm" class="space-y-4">
<div class="grid grid-cols-2 gap-4">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Prénom</label>
<input type="text" id="userFirstName" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Nom</label>
<input type="text" id="userLastName" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email</label>
<input type="email" id="userEmail" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Téléphone</label>
<input type="tel" id="userPhone" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" placeholder="+225 07 XX XX XX XX">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Profil</label>
<select id="userProfile" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option value="">-- Sélectionner un profil --</option>
<option value="collaborateur-senior">Collaborateur Senior</option>
<option value="collaborateur">Collaborateur</option>
<option value="user">Utilisateur</option>
<option value="caissier">Caissier</option>
</select>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Entreprises à affecter</label>
<div class="max-h-32 overflow-y-auto border border-gray-300 dark:border-gray-600 rounded-lg p-3">
${app.companies.map(company => `
<label class="flex items-center space-x-2 mb-2">
<input type="checkbox" value="${company.id}" class="company-checkbox">
<span class="text-sm text-gray-900 dark:text-white">${company.name}</span>
</label>
`).join('')}
</div>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Mot de passe temporaire</label>
<input type="password" id="userPassword" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" value="temp123">
</div>

<div class="flex justify-end space-x-4 pt-4">
<button type="button" onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors">
Annuler
</button>
<button type="submit" class="bg-primary hover:bg-primary/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-save mr-2"></i>Créer
</button>
</div>
</form>
</div>
</div>
`;

document.getElementById('modalContainer').innerHTML = modal;

setTimeout(() => {
const addUserForm = document.getElementById('addUserForm');
if (addUserForm) {
addUserForm.addEventListener('submit', function(e) {
e.preventDefault();
handleAddUser();
});
}
}, 100);
}

function handleAddUser() {
const firstName = document.getElementById('userFirstName').value;
const lastName = document.getElementById('userLastName').value;
const email = document.getElementById('userEmail').value;
const phone = document.getElementById('userPhone').value;
const profile = document.getElementById('userProfile').value;
const password = document.getElementById('userPassword').value;

// Récupérer les entreprises sélectionnées
const selectedCompanies = [];
document.querySelectorAll('.company-checkbox:checked').forEach(checkbox => {
selectedCompanies.push(parseInt(checkbox.value));
});

const roleMap = {
'collaborateur-senior': 'Collaborateur Senior',
'collaborateur': 'Collaborateur',
'user': 'Utilisateur',
'caissier': 'Caissier'
};

const newUser = {
id: app.users.length + 1,
name: `${firstName} ${lastName}`,
email: email,
role: roleMap[profile],
profile: profile,
phone: phone,
companies: selectedCompanies,
status: 'Actif'
};

app.users.push(newUser);

closeModal();
loadUsersManagement();
showSuccessMessage('✅ Collaborateur créé avec succès !');
console.log('✅ Nouvel utilisateur créé:', newUser);
}

// =============================================================================
// COMPANIES MANAGEMENT - FONCTION ORIGINALE RESTAURÉE
// =============================================================================

function loadCompanies() {
const content = `
<div class="space-y-6">
<div class="flex justify-between items-center">
<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
${app.currentProfile === 'admin' ? 'Gestion des Entreprises' : 'Mes Entreprises'}
</h2>
${app.currentProfile === 'admin' ? `
<button onclick="openAddCompanyModal()" class="bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-plus mr-2"></i>Nouvelle Entreprise
</button>
` : ''}
</div>

<!-- Statistiques entreprises -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-6">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
<div class="text-3xl font-bold text-primary">${app.companies.length}</div>
<div class="text-sm text-gray-600 dark:text-gray-400">Total entreprises</div>
</div>
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
<div class="text-3xl font-bold text-success">${app.companies.filter(c => c.status === 'Actif').length}</div>
<div class="text-sm text-gray-600 dark:text-gray-400">Actives</div>
</div>
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
<div class="text-3xl font-bold text-warning">${app.companies.filter(c => c.status === 'Période d\'essai').length}</div>
<div class="text-sm text-gray-600 dark:text-gray-400">En essai</div>
</div>
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
<div class="text-3xl font-bold text-danger">${app.companies.filter(c => c.status === 'Suspendu').length}</div>
<div class="text-sm text-gray-600 dark:text-gray-400">Suspendues</div>
</div>
</div>

<!-- Liste des entreprises -->
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">
<div class="p-6 border-b border-gray-200 dark:border-gray-700">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white">Liste des Entreprises</h3>
</div>
<div class="overflow-x-auto">
<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
<thead class="bg-gray-50 dark:bg-gray-700">
<tr>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Entreprise</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Type</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Système</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Statut</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Caisses</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
</tr>
</thead>
<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
${generateCompaniesRows()}
</tbody>
</table>
</div>
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;
}

function openAddCompanyModal() {
const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" onclick="closeModalOnBackground(event)">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-lg mx-4" onclick="event.stopPropagation()">
<h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">
<i class="fas fa-building mr-2 text-primary"></i>Nouvelle Entreprise
</h3>

<form id="addCompanyForm" class="space-y-4">
<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Nom de l'entreprise</label>
<input type="text" id="companyName" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Type d'entreprise</label>
<select id="companyType" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option value="">-- Sélectionner le type --</option>
<option value="SARL">SARL - Société à Responsabilité Limitée</option>
<option value="SA">SA - Société Anonyme</option>
<option value="EURL">EURL - Entreprise Unipersonnelle à Responsabilité Limitée</option>
<option value="SAS">SAS - Société par Actions Simplifiée</option>
<option value="SNC">SNC - Société en Nom Collectif</option>
<option value="EI">EI - Entreprise Individuelle</option>
</select>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Téléphone</label>
<input type="tel" id="companyPhone" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base" placeholder="+225 XX XX XX XX XX">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Adresse</label>
<input type="text" id="companyAddress" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Système comptable</label>
<select id="companySystem" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
<option value="">-- Sélectionner le système --</option>
<option value="Normal">Système Normal</option>
<option value="Minimal">Système Minimal</option>
</select>
</div>

<div>
<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Nombre de caisses</label>
<input type="number" id="companyCashRegisters" min="1" max="10" value="1" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-base">
</div>

<div class="flex justify-end space-x-4 pt-4">
<button type="button" onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors">
Annuler
</button>
<button type="submit" class="bg-primary hover:bg-primary/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-save mr-2"></i>Créer
</button>
</div>
</form>
</div>
</div>
`;

document.getElementById('modalContainer').innerHTML = modal;

setTimeout(() => {
const addCompanyForm = document.getElementById('addCompanyForm');
if (addCompanyForm) {
addCompanyForm.addEventListener('submit', function(e) {
e.preventDefault();
handleAddCompany();
});
}
}, 100);
}

function handleAddCompany() {
const name = document.getElementById('companyName').value;
const type = document.getElementById('companyType').value;
const phone = document.getElementById('companyPhone').value;
const address = document.getElementById('companyAddress').value;
const system = document.getElementById('companySystem').value;
const cashRegisters = parseInt(document.getElementById('companyCashRegisters').value);

const newCompany = {
id: app.companies.length + 1,
name: name,
type: type,
status: 'Période d\'essai',
system: system,
phone: phone,
address: address,
cashRegisters: cashRegisters
};

app.companies.push(newCompany);

closeModal();
loadCompanies();
populateCompanySelector(); // Mettre à jour le sélecteur
showSuccessMessage('✅ Entreprise créée avec succès !');
console.log('✅ Nouvelle entreprise créée:', newCompany);
}

// =============================================================================
// UTILITY FUNCTIONS - FONCTIONS RESTAURÉES
// =============================================================================

function generateCollaboratorPortfolio() {
const collaborators = app.users.filter(u => u.profile.includes('collaborateur'));

if (collaborators.length === 0) {
return '<div class="text-center text-gray-500 dark:text-gray-400 py-4">Aucun collaborateur trouvé</div>';
}

return collaborators.map(collab => `
<div class="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:shadow-md transition-shadow">
<div class="flex items-center space-x-4">
<div class="w-12 h-12 bg-primary text-white rounded-full flex items-center justify-center font-semibold">
${collab.name.split(' ').map(n => n[0]).join('')}
</div>
<div>
<div class="font-medium text-gray-900 dark:text-white">${collab.name}</div>
<div class="text-sm text-gray-500 dark:text-gray-400">${collab.role}</div>
</div>
</div>
<div class="text-right">
<div class="text-lg font-bold text-gray-900 dark:text-white">${collab.companies?.length || 0}</div>
<div class="text-sm text-gray-500 dark:text-gray-400">entreprises</div>
<div class="flex items-center space-x-2 mt-1">
<div class="w-16 h-2 bg-gray-200 dark:bg-gray-600 rounded-full overflow-hidden">
<div class="h-full bg-success" style="width: 95%"></div>
</div>
<span class="text-xs font-medium text-success">95%</span>
</div>
</div>
</div>
`).join('');
}

function generateEntriesRows() {
let filteredEntries = app.entries;

// Filtrer par entreprise pour les utilisateurs/caissiers
if (app.currentProfile === 'user' || app.currentProfile === 'caissier') {
filteredEntries = app.entries.filter(e => e.companyId == app.currentCompany);
}

if (filteredEntries.length === 0) {
return `
<tr>
<td colspan="7" class="px-6 py-8 text-center text-gray-500 dark:text-gray-400">
<i class="fas fa-inbox text-3xl mb-2"></i>
<div>Aucune écriture trouvée</div>
<div class="text-sm">Cliquez sur "Nouvelle écriture" pour commencer</div>
</td>
</tr>
`;
}

return filteredEntries.map(entry => `
<tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
<td class="px-6 py-4 whitespace-nowrap text-gray-900 dark:text-white">${new Date(entry.date).toLocaleDateString('fr-FR')}</td>
<td class="px-6 py-4 whitespace-nowrap text-gray-900 dark:text-white">${entry.journal}</td>
<td class="px-6 py-4 whitespace-nowrap text-gray-900 dark:text-white font-mono text-sm">${entry.piece}</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${entry.libelle}</td>
<td class="px-6 py-4 whitespace-nowrap text-gray-900 dark:text-white font-mono">${entry.lines.reduce((sum, line) => sum + line.debit, 0).toLocaleString('fr-FR')} FCFA</td>
<td class="px-6 py-4 whitespace-nowrap">
<span class="px-2 py-1 rounded text-sm ${entry.status === 'Validé' ? 'bg-success/20 text-success' : 'bg-warning/20 text-warning'}">${entry.status}</span>
</td>
<td class="px-6 py-4 whitespace-nowrap">
<div class="flex space-x-2">
<button onclick="viewEntryDetails(${entry.id})" class="text-primary hover:text-primary/80" title="Voir">
<i class="fas fa-eye"></i>
</button>
<button onclick="editEntryModal(${entry.id})" class="text-info hover:text-info/80" title="Modifier">
<i class="fas fa-edit"></i>
</button>
${entry.status === 'En attente' && app.currentProfile !== 'caissier' ? `
<button onclick="validateEntry(${entry.id})" class="text-success hover:text-success/80" title="Valider">
<i class="fas fa-check"></i>
</button>
` : ''}
<button onclick="confirmDeleteEntry(${entry.id})" class="text-danger hover:text-danger/80" title="Supprimer">
<i class="fas fa-trash"></i>
</button>
</div>
</td>
</tr>
`).join('');
}

function generateUsersRows() {
return app.users.map(user => `
<tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
<td class="px-6 py-4">
<div class="flex items-center space-x-3">
<div class="w-10 h-10 bg-primary text-white rounded-full flex items-center justify-center font-semibold text-sm">
${user.name.split(' ').map(n => n[0]).join('')}
</div>
<div>
<div class="font-medium text-gray-900 dark:text-white">${user.name}</div>
<div class="text-sm text-gray-500 dark:text-gray-400">${user.email}</div>
</div>
</div>
</td>
<td class="px-6 py-4">
<span class="px-2 py-1 rounded text-sm ${getProfileColor(user.role)}">${user.role}</span>
</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${user.companies?.length || 0} entreprise(s)</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${user.phone || 'Non renseigné'}</td>
<td class="px-6 py-4">
<span class="px-2 py-1 rounded text-sm ${user.status === 'Actif' ? 'bg-success/20 text-success' : 'bg-danger/20 text-danger'}">${user.status}</span>
</td>
<td class="px-6 py-4">
<div class="flex space-x-2">
<button onclick="editUserModal(${user.id})" class="text-primary hover:text-primary/80" title="Modifier">
<i class="fas fa-edit"></i>
</button>
<button onclick="manageUserCompaniesModal(${user.id})" class="text-info hover:text-info/80" title="Gérer entreprises">
<i class="fas fa-building"></i>
</button>
<button onclick="toggleUserStatus(${user.id})" class="text-warning hover:text-warning/80" title="Changer statut">
<i class="fas fa-toggle-on"></i>
</button>
<button onclick="confirmDeleteUser(${user.id})" class="text-danger hover:text-danger/80" title="Supprimer">
<i class="fas fa-trash"></i>
</button>
</div>
</td>
</tr>
`).join('');
}

function generateCompaniesRows() {
return app.companies.map(company => `
<tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
<td class="px-6 py-4">
<div>
<div class="font-medium text-gray-900 dark:text-white">${company.name}</div>
<div class="text-sm text-gray-500 dark:text-gray-400">${company.phone || 'Téléphone non renseigné'}</div>
<div class="text-sm text-gray-500 dark:text-gray-400">${company.address || 'Adresse non renseignée'}</div>
</div>
</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${company.type}</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${company.system}</td>
<td class="px-6 py-4">
<span class="px-2 py-1 rounded text-sm ${getStatusColor(company.status)}">${company.status}</span>
</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${company.cashRegisters}</td>
<td class="px-6 py-4">
<div class="flex space-x-2">
<button onclick="editCompanyModal(${company.id})" class="text-primary hover:text-primary/80" title="Modifier">
<i class="fas fa-edit"></i>
</button>
${app.currentProfile === 'admin' ? `
<button onclick="toggleCompanyStatus(${company.id})" class="text-warning hover:text-warning/80" title="Changer statut">
<i class="fas fa-toggle-on"></i>
</button>
<button onclick="confirmDeleteCompany(${company.id})" class="text-danger hover:text-danger/80" title="Supprimer">
<i class="fas fa-trash"></i>
</button>
` : ''}
<button onclick="viewCompanyDetailsModal(${company.id})" class="text-info hover:text-info/80" title="Voir détails">
<i class="fas fa-eye"></i>
</button>
</div>
</td>
</tr>
`).join('');
}

function generateAccountsByClass() {
const accountsByClass = {
1: { name: 'Classe 1 - Comptes de ressources durables', accounts: [] },
2: { name: 'Classe 2 - Comptes d\'actif immobilisé', accounts: [] },
3: { name: 'Classe 3 - Comptes de stocks', accounts: [] },
4: { name: 'Classe 4 - Comptes de tiers', accounts: [] },
5: { name: 'Classe 5 - Comptes financiers', accounts: [] },
6: { name: 'Classe 6 - Comptes de charges', accounts: [] },
7: { name: 'Classe 7 - Comptes de produits', accounts: [] },
8: { name: 'Classe 8 - Comptes de résultats', accounts: [] },
9: { name: 'Classe 9 - Comptes analytiques', accounts: [] }
};

// Grouper les comptes par classe
app.accounts.forEach(account => {
const classNumber = parseInt(account.code.charAt(0));
if (accountsByClass[classNumber]) {
accountsByClass[classNumber].accounts.push(account);
}
});

return Object.values(accountsByClass).map(classData => generateAccountClassHTML(classData)).join('');
}

function generateAccountClassHTML(classData) {
if (classData.accounts.length === 0) return '';

return `
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">
<div class="p-6 border-b border-gray-200 dark:border-gray-700">
<h3 class="text-lg font-semibold text-gray-900 dark:text-white">${classData.name}</h3>
<p class="text-sm text-gray-500 dark:text-gray-400">${classData.accounts.length} compte(s)</p>
</div>
<div class="overflow-x-auto">
<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
<thead class="bg-gray-50 dark:bg-gray-700">
<tr>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Code</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Intitulé</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Catégorie</th>
<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
</tr>
</thead>
<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
${classData.accounts.map(account => `
<tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
<td class="px-6 py-4 font-mono text-gray-900 dark:text-white">${account.code}</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${account.name}</td>
<td class="px-6 py-4 text-gray-500 dark:text-gray-400">${account.category}</td>
<td class="px-6 py-4">
<div class="flex space-x-2">
<button onclick="editAccountModal('${account.code}')" class="text-primary hover:text-primary/80" title="Modifier">
<i class="fas fa-edit"></i>
</button>
<button onclick="confirmDeleteAccount('${account.code}')" class="text-danger hover:text-danger/80" title="Supprimer">
<i class="fas fa-trash"></i>
</button>
</div>
</td>
</tr>
`).join('')}
</tbody>
</table>
</div>
</div>
`;
}

function generateCashierOperations() {
const operations = [
{ time: '14:30', type: 'Recette', description: 'Vente comptant', amount: '+15,000', status: 'En attente' },
{ time: '13:15', type: 'Dépense', description: 'Achat fournitures', amount: '-5,000', status: 'Validé' },
{ time: '11:45', type: 'Recette', description: 'Encaissement client', amount: '+25,000', status: 'Validé' },
{ time: '10:20', type: 'Dépense', description: 'Frais transport', amount: '-3,500', status: 'En attente' }
];

return operations.map(op => `
<div class="flex items-center justify-between p-3 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-lg transition-colors">
<div class="flex items-center space-x-3">
<div class="w-8 h-8 ${op.type === 'Recette' ? 'bg-success' : 'bg-warning'} text-white rounded-full flex items-center justify-center">
<i class="fas ${op.type === 'Recette' ? 'fa-arrow-down' : 'fa-arrow-up'} text-sm"></i>
</div>
<div>
<div class="font-medium text-gray-900 dark:text-white">${op.description}</div>
<div class="text-sm text-gray-500 dark:text-gray-400">${op.time}</div>
</div>
</div>
<div class="text-right">
<div class="font-bold ${op.type === 'Recette' ? 'text-success' : 'text-warning'}">${op.amount} FCFA</div>
<div class="text-xs ${op.status === 'Validé' ? 'text-success' : 'text-warning'}">${op.status}</div>
</div>
</div>
`).join('');
}

function generateCashRegistersRows() {
const cashRegisters = [
{ name: 'Caisse Principale', responsible: 'Ibrahim Koné', balance: '210,000', status: 'Ouvert' },
{ name: 'Caisse Ventes', responsible: 'Fatou Diallo', balance: '85,000', status: 'Ouvert' },
{ name: 'Caisse Réception', responsible: 'Non assigné', balance: '0', status: 'Fermé' }
];

return cashRegisters.map(cash => `
<tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
<td class="px-6 py-4 font-medium text-gray-900 dark:text-white">${cash.name}</td>
<td class="px-6 py-4 text-gray-900 dark:text-white">${cash.responsible}</td>
<td class="px-6 py-4 font-mono text-gray-900 dark:text-white">${cash.balance} FCFA</td>
<td class="px-6 py-4">
<span class="px-2 py-1 rounded text-sm ${cash.status === 'Ouvert' ? 'bg-success/20 text-success' : 'bg-gray-500/20 text-gray-500'}">${cash.status}</span>
</td>
<td class="px-6 py-4">
<div class="flex space-x-2">
<button onclick="viewCashRegisterModal('${cash.name}')" class="text-primary hover:text-primary/80" title="Voir">
<i class="fas fa-eye"></i>
</button>
<button onclick="editCashRegisterModal('${cash.name}')" class="text-info hover:text-info/80" title="Modifier">
<i class="fas fa-edit"></i>
</button>
<button onclick="manageCashierAssignmentModal('${cash.name}')" class="text-warning hover:text-warning/80" title="Assigner caissier">
<i class="fas fa-user-cog"></i>
</button>
<button onclick="confirmDeleteCashRegister('${cash.name}')" class="text-danger hover:text-danger/80" title="Supprimer">
<i class="fas fa-trash"></i>
</button>
</div>
</td>
</tr>
`).join('');
}

function getStatusColor(status) {
switch(status) {
case 'Actif': return 'bg-success/20 text-success';
case 'Période d\'essai': return 'bg-warning/20 text-warning';
case 'Suspendu': return 'bg-danger/20 text-danger';
default: return 'bg-gray-500/20 text-gray-500';
}
}

function getProfileColor(profile) {
switch(profile) {
case 'Administrateur': return 'bg-danger/20 text-danger';
case 'Collaborateur Senior': return 'bg-primary/20 text-primary';
case 'Collaborateur': return 'bg-info/20 text-info';
case 'Utilisateur': return 'bg-success/20 text-success';
case 'Caissier': return 'bg-warning/20 text-warning';
default: return 'bg-gray-500/20 text-gray-500';
}
}

function showCompanySelectionWarning(operation) {
const content = `
<div class="flex items-center justify-center min-h-96">
<div class="text-center bg-warning/10 p-8 rounded-xl max-w-md">
<div class="w-16 h-16 bg-warning text-white rounded-full flex items-center justify-center mx-auto mb-4">
<i class="fas fa-exclamation-triangle text-2xl"></i>
</div>
<h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Sélection d'entreprise requise</h3>
<p class="text-gray-600 dark:text-gray-400 mb-6">
Vous devez sélectionner une entreprise dans la barre latérale avant d'accéder aux ${operation}.
</p>
<button onclick="focusCompanySelector()" class="bg-primary hover:bg-primary/90 text-white px-6 py-2 rounded-lg font-medium transition-colors">
<i class="fas fa-building mr-2"></i>Sélectionner une entreprise
</button>
</div>
</div>
`;
document.getElementById('mainContent').innerHTML = content;
}

function focusCompanySelector() {
const selector = document.getElementById('activeCompanySelect');
if (selector) {
selector.focus();
selector.scrollIntoView({ behavior: 'smooth' });
}
}

function showAccessDenied() {
document.getElementById('mainContent').innerHTML = `
<div class="text-center p-8">
<div class="w-16 h-16 bg-danger text-white rounded-full flex items-center justify-center mx-auto mb-4">
<i class="fas fa-ban text-2xl"></i>
</div>
<h3 class="text-xl font-semibold text-gray-900 dark:text-white">Accès refusé</h3>
<p class="text-gray-600 dark:text-gray-400 mt-2">Vous n'avez pas les permissions nécessaires pour accéder à cette section.</p>
</div>
`;
}

function showSuccessMessage(message) {
alert(message);
}

function showProcessingMessage(message) {
alert(message);
}

function showErrorMessage(message) {
alert('❌ ' + message);
}

// =============================================================================
// FONCTIONS VIDES POUR ÉVITER LES ERREURS
// =============================================================================

// Écritures
function viewEntryDetails(id) {
showSuccessMessage(`👁️ Visualisation de l'écriture ${id}\n\nFonctionnalité en cours de développement.`);
}

function editEntryModal(id) {
showSuccessMessage(`✏️ Modification de l'écriture ${id}\n\nFonctionnalité en cours de développement.`);
}

function confirmDeleteEntry(id) {
showSuccessMessage(`🗑️ Suppression de l'écriture ${id}\n\nFonctionnalité en cours de développement.`);
}

function validateEntry(id) {
showSuccessMessage(`✅ Validation de l'écriture ${id}\n\nFonctionnalité en cours de développement.`);
}

// Utilisateurs
function editUserModal(id) {
showSuccessMessage(`👤 Modification de l'utilisateur ${id}\n\nFonctionnalité en cours de développement.`);
}

function manageUserCompaniesModal(id) {
showSuccessMessage(`🏢 Gestion des entreprises pour l'utilisateur ${id}\n\nFonctionnalité en cours de développement.`);
}

function confirmDeleteUser(id) {
showSuccessMessage(`🗑️ Suppression de l'utilisateur ${id}\n\nFonctionnalité en cours de développement.`);
}

function toggleUserStatus(id) {
showSuccessMessage(`🔄 Changement de statut pour l'utilisateur ${id}\n\nFonctionnalité en cours de développement.`);
}

// Entreprises
function editCompanyModal(id) {
showSuccessMessage(`🏢 Modification de l'entreprise ${id}\n\nFonctionnalité en cours de développement.`);
}

function confirmDeleteCompany(id) {
showSuccessMessage(`🗑️ Suppression de l'entreprise ${id}\n\nFonctionnalité en cours de développement.`);
}

function toggleCompanyStatus(id) {
showSuccessMessage(`🔄 Changement de statut pour l'entreprise ${id}\n\nFonctionnalité en cours de développement.`);
}

function viewCompanyDetailsModal(id) {
showSuccessMessage(`👁️ Visualisation de l'entreprise ${id}\n\nFonctionnalité en cours de développement.`);
}

// Comptes
function editAccountModal(code) {
showSuccessMessage(`📊 Modification du compte ${code}\n\nFonctionnalité en cours de développement.`);
}

function confirmDeleteAccount(code) {
showSuccessMessage(`🗑️ Suppression du compte ${code}\n\nFonctionnalité en cours de développement.`);
}

// Caisses
function viewCashRegisterModal(name) {
showSuccessMessage(`💰 Consultation de la caisse: ${name}\n\nFonctionnalité en cours de développement.`);
}

function editCashRegisterModal(name) {
showSuccessMessage(`✏️ Modification de la caisse: ${name}\n\nFonctionnalité en cours de développement.`);
}

function manageCashierAssignmentModal(name) {
showSuccessMessage(`👤 Gestion du caissier pour: ${name}\n\nFonctionnalité en cours de développement.`);
}

function confirmDeleteCashRegister(name) {
showSuccessMessage(`🗑️ Suppression de la caisse: ${name}\n\nFonctionnalité en cours de développement.`);
}

// Notifications
function toggleNotificationsPanel() {
const panel = document.getElementById('notificationsPanel');
if (panel) {
panel.classList.toggle('hidden');
}
}

function showNotificationSettings() {
showSuccessMessage('🔔 Paramètres de notifications\n\nFonctionnalité en cours de développement.');
}

// =============================================================================
// CHARTS INITIALIZATION - FONCTIONS ORIGINALES COMPLÈTES
// =============================================================================

function initializeAdminCharts() {
try {
// Portfolio Chart
const portfolioCtx = document.getElementById('portfolioChart');
if (portfolioCtx) {
new Chart(portfolioCtx, {
type: 'line',
data: {
labels: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jun'],
datasets: [{
label: 'Entreprises Actives',
data: [18, 20, 22, 21, 23, app.companies.filter(c => c.status === 'Actif').length],
borderColor: '#5D5CDE',
backgroundColor: 'rgba(93, 92, 222, 0.1)',
tension: 0.4,
fill: true
}]
},
options: {
responsive: true,
maintainAspectRatio: false,
plugins: { legend: { display: true } },
animation: { duration: 800 }
}
});
}

// Sector Chart avec délai
setTimeout(() => {
const sectorCtx = document.getElementById('sectorChart');
if (sectorCtx) {
new Chart(sectorCtx, {
type: 'bar',
data: {
labels: ['Commerce', 'Services', 'Industries', 'Agriculture'],
datasets: [{
label: 'Performance (%)',
data: [92, 88, 95, 85],
backgroundColor: ['#5D5CDE', '#3B82F6', '#0284C7', '#059669']
}]
},
options: {
responsive: true,
maintainAspectRatio: false,
plugins: { legend: { display: false } },
animation: { duration: 600 }
}
});
}
}, 300);
} catch (error) {
console.error('Erreur initialisation graphiques admin:', error);
}
}

function initializeStandardCharts() {
try {
// Monthly Chart
const monthlyCtx = document.getElementById('monthlyChart');
if (monthlyCtx) {
new Chart(monthlyCtx, {
type: 'line',
data: {
labels: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jun'],
datasets: [{
label: 'Écritures',
data: [120, 190, 300, 500, 200, app.entries.length * 10],
borderColor: '#5D5CDE',
backgroundColor: 'rgba(93, 92, 222, 0.1)',
tension: 0.4
}]
},
options: {
responsive: true,
maintainAspectRatio: false,
animation: { duration: 800 }
}
});
}

// Journal Chart avec délai
setTimeout(() => {
const journalCtx = document.getElementById('journalChart');
if (journalCtx) {
const journalData = {
'JG': app.entries.filter(e => e.journal === 'JG').length,
'JA': app.entries.filter(e => e.journal === 'JA').length,
'JV': app.entries.filter(e => e.journal === 'JV').length,
'JB': app.entries.filter(e => e.journal === 'JB').length,
'JC': app.entries.filter(e => e.journal === 'JC').length,
'JOD': app.entries.filter(e => e.journal === 'JOD').length
};

new Chart(journalCtx, {
type: 'doughnut',
data: {
labels: ['JG', 'JA', 'JV', 'JB', 'JC', 'JOD'],
datasets: [{
data: Object.values(journalData),
backgroundColor: ['#5D5CDE', '#3B82F6', '#0284C7', '#059669', '#D97706', '#DC2626']
}]
},
options: {
responsive: true,
maintainAspectRatio: false,
animation: { duration: 600 }
}
});
}
}, 300);
} catch (error) {
console.error('Erreur initialisation graphiques standard:', error);
}
}

// =============================================================================
// DATA MANAGEMENT (ADMIN ONLY) - FONCTION ORIGINALE COMPLÈTE
// =============================================================================

function showAdminDataMenu() {
if (app.currentProfile !== 'admin') {
alert('❌ Accès refusé. Cette fonctionnalité est réservée aux administrateurs.');
return;
}

const modal = `
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" onclick="closeModalOnBackground(event)">
<div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-8 w-full max-w-md mx-4" onclick="event.stopPropagation()">
<h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">
<i class="fas fa-shield-alt mr-2 text-danger"></i>Gestion des Données (Admin)
</h3>

<div class="space-y-4">
<button onclick="clearTestData()" class="w-full bg-warning hover:bg-warning/90 text-white px-4 py-3 rounded-lg font-medium transition-colors text-left">
<i class="fas fa-trash mr-3"></i>Supprimer les données test
<div class="text-xs mt-1 opacity-80">Action irréversible - Réservée admin</div>
</button>

<button onclick="exportAllData()" class="w-full bg-success hover:bg-success/90 text-white px-4 py-3 rounded-lg font-medium transition-colors text-left">
<i class="fas fa-download mr-3"></i>Exporter toutes les données
<div class="text-xs mt-1 opacity-80">Backup complet système</div>
</button>

<button onclick="importData()" class="w-full bg-info hover:bg-info/90 text-white px-4 py-3 rounded-lg font-medium transition-colors text-left">
<i class="fas fa-upload mr-3"></i>Importer des données
<div class="text-xs mt-1 opacity-80">Restauration système</div>
</button>

<button onclick="generateTestData()" class="w-full bg-primary hover:bg-primary/90 text-white px-4 py-3 rounded-lg font-medium transition-colors text-left">
<i class="fas fa-magic mr-3"></i>Générer données test
<div class="text-xs mt-1 opacity-80">Pour démonstration</div>
</button>
</div>

<div class="mt-6 flex justify-end space-x-3">
<button onclick="closeModal()" class="bg-gray-500 hover:bg-gray-400 text-white px-4 py-2 rounded-lg font-medium transition-colors">
Fermer
</button>
</div>
</div>
</div>
`;
document.getElementById('modalContainer').innerHTML = modal;
}

function clearTestData() {
showSuccessMessage('📊 Suppression des données test...\n\nFonctionnalité en cours de développement.');
}

function exportAllData() {
showSuccessMessage('📊 Export des données...\n\nFonctionnalité en cours de développement.');
}

function importData() {
showSuccessMessage('📊 Import des données...\n\nFonctionnalité en cours de développement.');
}

function generateTestData() {
showSuccessMessage('📊 Génération de données test...\n\nFonctionnalité en cours de développement.');
}

// =============================================================================
// MODAL MANAGEMENT
// =============================================================================

function closeModal() {
document.getElementById('modalContainer').innerHTML = '';
}

function closeModalOnBackground(event) {
if (event.target === event.currentTarget) {
closeModal();
}
}

// =============================================================================
// EVENT LISTENERS & INITIALIZATION
// =============================================================================

function bindEventListeners() {
try {
// Company selector
setTimeout(() => {
const companySelect = document.getElementById('activeCompanySelect');
if (companySelect) {
companySelect.addEventListener('change', function(e) {
app.currentCompany = e.target.value;
updateSelectedCompanyInfo();
console.log('✅ Entreprise sélectionnée:', app.currentCompany);
});
}
}, 100);

// Sidebar toggle
const sidebarToggle = document.getElementById('sidebarToggle');
if (sidebarToggle) {
sidebarToggle.addEventListener('click', function() {
const sidebar = document.getElementById('sidebar');
if (sidebar) {
sidebar.classList.toggle('-translate-x-full');
}
});
}

// Login form
const loginForm = document.getElementById('loginForm');
if (loginForm) {
loginForm.addEventListener('submit', function(e) {
e.preventDefault();
handleLogin();
});
}

// Close sidebar on outside click (mobile)
document.addEventListener('click', function(e) {
const sidebar = document.getElementById('sidebar');
const sidebarToggle = document.getElementById('sidebarToggle');

if (window.innerWidth < 1024 && sidebar && sidebarToggle && !sidebar.contains(e.target) && !sidebarToggle.contains(e.target)) {
sidebar.classList.add('-translate-x-full');
}
});
} catch (error) {
console.error('Erreur bindEventListeners:', error);
}
}

function initializeApp() {
try {
console.log('🔄 Initialisation de l\'application...');

initializeData();
loadNavigationMenu();
updateUserInfo();
loadDashboard();
bindEventListeners();

console.log('✅ DOUKÈ Compta Pro initialisé avec succès !');
} catch (error) {
console.error('❌ Erreur lors de l\'initialisation:', error);
showErrorMessage('Erreur lors de l\'initialisation de l\'application');
}
}

// =============================================================================
// APPLICATION START
// =============================================================================

document.addEventListener('DOMContentLoaded', function() {
try {
setTimeout(() => {
bindEventListeners();
console.log('🚀 DOUKÈ Compta Pro - Application démarrée avec toutes les fonctionnalités restaurées');
}, 100);
} catch (error) {
console.error('❌ Erreur au démarrage:', error);
}
});

// Protection globale contre les erreurs
window.addEventListener('error', function(e) {
console.error('❌ Erreur globale capturée:', e.error);
});

window.addEventListener('unhandledrejection', function(e) {
console.error('❌ Promesse rejetée:', e.reason);
});
</script>
</body>
</html>