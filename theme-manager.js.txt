// =============================================================================
// DOUK√à Compta Pro - Gestionnaire de th√®mes v3.1
// =============================================================================

const themeManager = {
    current: 'system',
    
    init() {
        console.log('üé® Initialisation du gestionnaire de th√®mes');
        
        // D√©tecter le th√®me initial
        if (localStorage.getItem('theme') === 'dark' ||
            (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark');
            this.current = 'dark';
        } else if (localStorage.getItem('theme') === 'light') {
            document.documentElement.classList.remove('dark');
            this.current = 'light';
        } else {
            this.current = 'system';
        }
        
        // √âcouter les changements du th√®me syst√®me
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
            if (this.current === 'system') {
                if (event.matches) {
                    document.documentElement.classList.add('dark');
                } else {
                    document.documentElement.classList.remove('dark');
                }
                this.notifyThemeChange();
            }
        });
        
        console.log('‚úÖ Th√®me initial:', this.current);
    },
    
    setTheme(theme) {
        console.log('üé® Changement de th√®me vers:', theme);
        this.current = theme;
        
        if (theme === 'dark') {
            document.documentElement.classList.add('dark');
            localStorage.setItem('theme', 'dark');
        } else if (theme === 'light') {
            document.documentElement.classList.remove('dark');
            localStorage.setItem('theme', 'light');
        } else {
            localStorage.removeItem('theme');
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }
        }
        
        this.notifyThemeChange();
    },
    
    getCurrentTheme() {
        return this.current;
    },
    
    isDarkMode() {
        return document.documentElement.classList.contains('dark');
    },
    
    notifyThemeChange() {
        // Notifier les autres composants du changement de th√®me
        window.dispatchEvent(new CustomEvent('themeChange', {
            detail: { 
                theme: this.current, 
                isDark: this.isDarkMode() 
            }
        }));
    },
    
    // M√©thodes utilitaires pour les composants
    getThemeColors() {
        return {
            primary: '#5D5CDE',
            primaryLight: '#8B8BF0',
            primaryDark: '#1E40AF',
            secondary: '#1D4ED8',
            success: '#10B981',
            warning: '#F59E0B',
            danger: '#EF4444',
            info: '#3B82F6'
        };
    },
    
    applyThemeToElement(element, theme = null) {
        const targetTheme = theme || this.current;
        
        if (targetTheme === 'dark') {
            element.classList.add('dark');
        } else {
            element.classList.remove('dark');
        }
    }
};

// Fonctions globales pour l'interface
function initializeThemeManager() {
    themeManager.init();
}

function toggleThemeMenu() {
    const menu = document.getElementById('themeMenu');
    if (menu) {
        menu.classList.toggle('hidden');
    }
}

function setTheme(theme) {
    try {
        themeManager.setTheme(theme);
        document.getElementById('themeMenu').classList.add('hidden');
        
        if (window.unifiedManager && window.unifiedManager.notificationManager) {
            window.unifiedManager.notificationManager.show(
                'success', 
                'Th√®me modifi√©', 
                `Th√®me ${theme} appliqu√© avec succ√®s`
            );
        }
    } catch (error) {
        console.error('Erreur changement th√®me:', error);
    }
}

// Export du gestionnaire
window.ThemeManager = themeManager;

console.log('üì¶ Module ThemeManager charg√©');